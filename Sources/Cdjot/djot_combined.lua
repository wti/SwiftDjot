package.preload["djot.attributes"]=function()local e,t=string.find,string.sub;local a=0;local o=1;local i=2;local n=3;local s=4;local h=5;local r=6;local d=7;local l=8;local c=9;local u=10;local m=11;local w={};local f={};f[m]=function(t,o)if e(t.subject,"^{",o)then return a;else return c;end end;f[c]=function(e,e)return c;end;f[u]=function(e,e)return u;end;f[a]=function(s,h)local t=t(s.subject,h,h);if(t==" ")or(t=="\t")or(t=="\n")or(t=="\r")then return a;elseif t=="}"then return u;elseif t=="#"then s.begin=h;return o;elseif t=="%"then s.begin=h;return l;elseif t=="."then s.begin=h;return i;elseif e(t,"^[%a%d_:-]")then s.begin=h;return n;else return c;end end;f[l]=function(e,o)if t(e.subject,o,o)=="%"then return a;else return l;end end;f[o]=function(i,n)local t=t(i.subject,n,n);if e(t,"^[^%s%p]")or(t=="_")or(t=="-")or(t==":")then return o;elseif t=="}"then if i.lastpos>i.begin then i:add_match(i.begin+1,i.lastpos,"id");end i.begin=nil;return u;elseif e(t,"^%s")then if i.lastpos>i.begin then i:add_match(i.begin+1,i.lastpos,"id");end i.begin=nil;return a;else return c;end end;f[i]=function(o,n)local t=t(o.subject,n,n);if e(t,"^[^%s%p]")or(t=="_")or(t=="-")or(t==":")then return i;elseif t=="}"then if o.lastpos>o.begin then o:add_match(o.begin+1,o.lastpos,"class");end o.begin=nil;return u;elseif e(t,"^%s")then if o.lastpos>o.begin then o:add_match(o.begin+1,o.lastpos,"class");end o.begin=nil;return a;else return c;end end;f[n]=function(a,o)local t=t(a.subject,o,o);if t=="="then a:add_match(a.begin,a.lastpos,"key");a.begin=nil;return s;elseif e(t,"^[%a%d_:-]")then return n;else return c;end end;f[s]=function(a,o)local t=t(a.subject,o,o);if t=='"'then a.begin=o;return r;elseif e(t,"^[%a%d_:-]")then a.begin=o;return h;else return c;end end;f[h]=function(o,i)local t=t(o.subject,i,i);if e(t,"^[%a%d_:-]")then return h;elseif t=="}"then o:add_match(o.begin,o.lastpos,"value");o.begin=nil;return u;elseif e(t,"^%s")then o:add_match(o.begin,o.lastpos,"value");o.begin=nil;return a;else return c;end end;f[d]=function(e,e)return r;end;f[r]=function(e,o)local t=t(e.subject,o,o);if t=='"'then e:add_match(e.begin+1,e.lastpos,"value");e.begin=nil;return a;elseif t=="\\"then return d;else return r;end end;function w.new(e,t)local t={subject=t,state=m,begin=nil,lastpos=nil,matches={}};setmetatable(t,e);e.__index=e;return t;end function w.add_match(e,t,a,o)e.matches[#e.matches+1]={t,a,o};end function w.get_matches(e)return e.matches;end function w.feed(e,t,a)local t=t;while t<=a do e.state=f[e.state](e,t);if e.state==u then return"done",t;elseif e.state==c then e.lastpos=t;return"fail",t;else e.lastpos=t;t=t+1;end end return"continue",a;end return{AttributeParser=w};end;package.preload["djot.inline"]=function()local e=unpack or table.unpack;local t=require("djot.attributes");local a,o=string.find,string.byte;local function i(e,t,o,i)local e,t,a,o,n=a(e,t,o);if t and(t<=i)then return e,t,a,o,n;end end local n={};function n.new(e,t,a)local t={warn=a or function()end,subject=t,matches={},openers={},verbatim=0,verbatim_type=nil,destination=false,firstpos=0,lastpos=0,allow_attributes=true,attribute_parser=nil,attribute_start=nil,attribute_slices=nil};setmetatable(t,e);e.__index=e;return t;end function n.add_match(e,t,a,o)e.matches[t]={t,a,o};end function n.add_opener(e,t,...)if not e.openers[t]then e.openers[t]={};end table.insert(e.openers[t],{...});end function n.clear_openers(t,a,o)for t,t in pairs(t.openers)do local i=#t;while t[i]do local e,n,s,s,h=e(t[i]);if(e>=a)and(n<=o)then t[i]=nil;elseif s and(s>=a)and h and(h<=o)then t[i][3]=nil;t[i][4]=nil;t[i][5]=nil;else break;end i=i-1;end end end function n.str_matches(t,a,o)for a=a,o do local o=t.matches[a];if o then local e,o,i=e(o);if(i~="str")and(i~="escape")then t.matches[a]={e,o,"str"};end end end end local function s(e,t)if e then return string.find(e[3],t);end end function n.between_matched(t,i,n,h)return function(r,d,l)n=n or"str";local c=r.subject;local u=a(c,"^%S",d+1);local a=a(c,"^%S",d-1);local s=s(r.matches[d-1],"^open%_marker");local o=((d+1)<=l)and(o(c,d+1)==125);local l=d;local c=d;if type(h)=="function"then u=u and h(r,d);end if s then u=true;a=false;c=d-1;end if not s and o then a=true;u=false;l=d+1;end if s and n:match("^right")then n=n:gsub("^right","left");elseif o and n:match("^left")then n=n:gsub("^left","right");end local h;if o then h="{"..t;else h=t;end local o=r.openers[h];if a and o and(#o>0)then local e,t=e(o[#o]);if t~=(d-1)then r:clear_openers(e,d);r:add_match(e,t,"+"..i);r:add_match(d,l,"-"..i);return l+1;end end if u then if s then h="{"..t;else h=t;end r:add_opener(h,c,d);r:add_match(c,d,n);return d+1;else r:add_match(d,l,n);return l+1;end end;end n.matchers={[96]=function(e,t,o)local n=e.subject;local o,o=i(n,"^`*",t,o);if not o then return nil;end if a(n,"^%$%$",t-2)and not a(n,"^\\",t-3)then e.matches[t-2]=nil;e.matches[t-1]=nil;e:add_match(t-2,o,"+display_math");e.verbatim_type="display_math";elseif a(n,"^%$",t-1)then e.matches[t-1]=nil;e:add_match(t-1,o,"+inline_math");e.verbatim_type="inline_math";else e:add_match(t,o,"+verbatim");e.verbatim_type="verbatim";end e.verbatim=(o-t)+1;return o+1;end,[92]=function(t,o,n)local s=t.subject;local h,h=i(s,"^[ \t]*\r?\n",o+1,n);t:add_match(o,o,"escape");if h then if#t.matches>0 then local e,a,o=e(t.matches[#t.matches]);if o=="str"then while(s:byte(a)==32)or(s:byte(a)==9)do a=a-1;end if e==a then t.matches[#t.matches]=nil;else t:add_match(e,a,"str");end end end t:add_match(o+1,h,"hardbreak");return h+1;else local e,e=i(s,"^[%p ]",o+1,n);if not e then t:add_match(o,o,"str");return o+1;else t:add_match(o,o,"escape");if a(s,"^ ",o+1)then t:add_match(o+1,e,"nbsp");else t:add_match(o+1,e,"str");end return e+1;end end end,[60]=function(e,t,a)local o=e.subject;local a,n=i(o,"^%<[^<>%s]+%>",t,a);if a then local s=i(o,"^%a+:",t+1,n);local t=i(o,"^[^:]+%@",t+1,n);if t then e:add_match(a,a,"+email");e:add_match(a+1,n-1,"str");e:add_match(n,n,"-email");return n+1;elseif s then e:add_match(a,a,"+url");e:add_match(a+1,n-1,"str");e:add_match(n,n,"-url");return n+1;end end end,[126]=n.between_matched("~","subscript"),[94]=n.between_matched("^","superscript"),[91]=function(e,t,a)local a,o=i(e.subject,"^%^([^]]+)%]",t+1,a);if a then e:add_match(t,o,"footnote_reference");return o+1;else e:add_opener("[",t,t);e:add_match(t,t,"str");return t+1;end end,[93]=function(e,t,a)local o=e.openers["["];local n=e.subject;if o and(#o>0)then local o=o[#o];if o[3]=="reference_link"then local a=i(n,"^!",o[1]-1,a)and not i(n,"^[\\]",o[1]-2,a);if a then e:add_match(o[1]-1,o[1]-1,"image_marker");e:add_match(o[1],o[2],"+imagetext");e:add_match(o[4],o[4],"-imagetext");else e:add_match(o[1],o[2],"+linktext");e:add_match(o[4],o[4],"-linktext");end e:add_match(o[5],o[5],"+reference");e:add_match(t,t,"-reference");e:str_matches(o[5]+1,t-1);e:clear_openers(o[1],t);return t+1;elseif i(n,"^%[",t+1,a)then o[3]="reference_link";o[4]=t;o[5]=t+1;e:add_match(t,t+1,"str");e:clear_openers(o[1]+1,t-1);return t+2;elseif i(n,"^%(",t+1,a)then e.openers["("]={};o[3]="explicit_link";o[4]=t;o[5]=t+1;e.destination=true;e:add_match(t,t+1,"str");e:clear_openers(o[1]+1,t-1);return t+2;elseif i(n,"^%{",t+1,a)then e:add_match(o[1],o[2],"+span");e:add_match(t,t,"-span");e:clear_openers(o[1],t);return t+1;end end end,[40]=function(e,t)if not e.destination then return nil;end e:add_opener("(",t,t);e:add_match(t,t,"str");return t+1;end,[41]=function(e,t,a)if not e.destination then return nil;end local o=e.openers["("];if o and(#o>0)and o[#o][1]then o[#o]=nil;e:add_match(t,t,"str");return t+1;else local o=e.subject;local n=e.openers["["];if n and(#n>0)and(n[#n][3]=="explicit_link")then local n=n[#n];local a=i(o,"^!",n[1]-1,a)and not i(o,"^[\\]",n[1]-2,a);if a then e:add_match(n[1]-1,n[1]-1,"image_marker");e:add_match(n[1],n[2],"+imagetext");e:add_match(n[4],n[4],"-imagetext");else e:add_match(n[1],n[2],"+linktext");e:add_match(n[4],n[4],"-linktext");end e:add_match(n[5],n[5],"+destination");e:add_match(t,t,"-destination");e.destination=false;e:str_matches(n[5]+1,t-1);e:clear_openers(n[1],t);return t+1;end end end,[95]=n.between_matched("_","emph"),[42]=n.between_matched("*","strong"),[123]=function(e,a,o)if i(e.subject,"^[_*~^+='\"-]",a+1,o)then e:add_match(a,a,"open_marker");return a+1;elseif e.allow_attributes then e.attribute_parser=t.AttributeParser:new(e.subject);e.attribute_start=a;e.attribute_slices={};return a;else e:add_match(a,a,"str");return a+1;end end,[58]=function(e,t,a)local a,o=i(e.subject,"^%:[%w_+-]+%:",t,a);if a then e:add_match(a,o,"emoji");return o+1;else e:add_match(t,t,"str");return t+1;end end,[43]=n.between_matched("+","insert","str",function(e,t)return a(e.subject,"^%{",t-1)or a(e.subject,"^%}",t+1);end),[61]=n.between_matched("=","mark","str",function(e,t)return a(e.subject,"^%{",t-1)or a(e.subject,"^%}",t+1);end),[39]=n.between_matched("'","single_quoted","right_single_quote",function(e,t)return(t==1)or a(e.subject,"^[%s\"'-([]",t-1);end),[34]=n.between_matched('"',"double_quoted","left_double_quote"),[45]=function(e,t,i)local s=e.subject;local h;if(o(s,t-1)==123)or(o(s,t+1)==125)then h=n.between_matched("-","delete","str",function(e,t)return a(e.subject,"^%{",t-1)or a(e.subject,"^%}",t+1);end)(e,t,i);return h;end local a,a=a(s,"^%-*",t);if i<a then a=i;end local i=(1+a)-t;if o(s,a+1)==125 then i=i-1;end if i==0 then e:add_match(t,t+1,"str");return t+2;end local a=(i%3)==0;local o=(i%2)==0;while i>0 do if a then e:add_match(t,t+2,"em_dash");t=t+3;i=i-3;elseif o then e:add_match(t,t+1,"en_dash");t=t+2;i=i-2;elseif(i>=3)and(((i%2)~=0)or(i>4))then e:add_match(t,t+2,"em_dash");t=t+3;i=i-3;elseif i>=2 then e:add_match(t,t+1,"en_dash");t=t+2;i=i-2;else e:add_match(t,t,"str");t=t+1;i=i-1;end end return t;end,[46]=function(e,t,a)if i(e.subject,"^%.%.",t+1,a)then e:add_match(t,t+2,"ellipses");return t+3;end end};function n.single_char(e,t)e:add_match(t,t,"str");return t+1;end function n.reparse_attributes(t)local a=t.attribute_slices;if not a then return;end t.allow_attributes=false;t.attribute_parser=nil;t.attribute_start=nil;if a then for o=1,#a do t:feed(e(a[o]));end end t.allow_attributes=true;t.slices=nil;end function n.feed(t,a,n)local s="[][\\`{}_*()!<>~^:=+$\r\n'\".-]";local h=t.subject;local r=t.matchers;local d;if(t.firstpos==0)or(a<t.firstpos)then t.firstpos=a;end if(t.lastpos==0)or(n>t.lastpos)then t.lastpos=n;end d=a;while d<=n do if t.attribute_parser then local a=d;local o=i(h,s,d,n);if not o or(o>n)then o=n;end local o,i=t.attribute_parser:feed(a,o);if o=="done"then local a=t.attribute_start;t:add_match(a,a,"+attributes");t:add_match(i,i,"-attributes");local a=t.attribute_parser:get_matches();for o=1,#a do t:add_match(e(a[o]));end t.attribute_parser=nil;t.attribute_start=nil;t.attribute_slices=nil;d=i+1;elseif o=="fail"then t:reparse_attributes();d=a;elseif o=="continue"then if#t.attribute_slices==0 then t.attribute_slices={};end t.attribute_slices[#t.attribute_slices+1]={a,i};d=i+1;end else local e=i(h,s,d,n)or(n+1);if e>d then t:add_match(d,e-1,"str");d=e;if d>n then break;end end local e=o(h,d);if(e==13)or(e==10)then if(e==13)and i(h,"^[%n]",d+1,n)then t:add_match(d,d+1,"softbreak");d=d+2;else t:add_match(d,d,"softbreak");d=d+1;end elseif t.verbatim>0 then if e==96 then local e,e=i(h,"^`+",d,n);if e and(((e-d)+1)==t.verbatim)then local a,o=i(h,"^%{%=[^%s{}`]+%}",e+1,n);if a and(t.verbatim_type=="verbatim")then t:add_match(d,e,"-"..t.verbatim_type);t:add_match(a,o,"raw_format");d=o+1;else t:add_match(d,e,"-"..t.verbatim_type);d=e+1;end t.verbatim=0;t.verbatim_type=nil;else e=e or n;t:add_match(d,e,"str");d=e+1;end else t:add_match(d,d,"str");d=d+1;end else local e=r[e];d=(e and e(t,d,n))or t:single_char(d);end end end end function n.in_verbatim(e)return e.verbatim>0;end function n.get_matches(t)local a={};local i=t.subject;local n,s,h;if t.attribute_parser then t:reparse_attributes();end for o=t.firstpos,t.lastpos do if t.matches[o]then local e,i,r=e(t.matches[o]);if(r=="str")and(h=="str")and((s+1)==e)then a[#a]={n,i,r};n,s,h=n,i,r;else a[#a+1]=t.matches[o];n,s,h=e,i,r;end end end if#a>0 then local n=a[#a];local s,h,r=e(n);if r=="softbreak"then a[#a]=nil;n=a[#a];if not n then return a;end s,h,r=e(n);end if(r=="str")and(o(i,h)==32)then while(h>s)and(o(i,h)==32)do h=h-1;end a[#a]={s,h,r};end if t.verbatim>0 then t.warn({message="Unclosed verbatim",pos=h});a[#a+1]={h,h,"-"..t.verbatim_type};end end return a;end return{InlineParser=n};end;package.preload["djot.block"]=function()local e=require("djot.inline").InlineParser;local t=require("djot.attributes");local a=unpack or table.unpack;local o,i,n=string.find,string.sub,string.byte;local s={};function s.new(e,t,a)e=t;local t={};setmetatable(t,e);e.__index=e;if a then for e,a in pairs(a)do t[e]=a;end end return t;end local function h(e)if(e=="+")or(e=="-")or(e=="*")or(e==":")then return{e};elseif o(e,"^[+*-] %[[Xx ]%]")then return{"X"};elseif o(e,"^%[[Xx ]%]")then return{"X"};elseif o(e,"^[(]?%d+[).]")then return{(e:gsub("%d+","1"))};elseif o(e,"^[(]?[ivxlcdm][).]")then return{(e:gsub("%a+","a")),(e:gsub("%a+","i"))};elseif o(e,"^[(]?[IVXLCDM][).]")then return{(e:gsub("%a+","A")),(e:gsub("%a+","I"))};elseif o(e,"^[(]?%l[).]")then return{(e:gsub("%l","a"))};elseif o(e,"^[(]?%u[).]")then return{(e:gsub("%u","A"))};elseif o(e,"^[(]?[ivxlcdm]+[).]")then return{(e:gsub("%a+","i"))};elseif o(e,"^[(]?[IVXLCDM]+[).]")then return{(e:gsub("%a+","I"))};else return{};end end local r={};function r.new(e,t,a)if not t:find("[\r\n]$")then t=t.."\n";end local t={warn=a or function()end,subject=t,indent=0,startline=nil,starteol=nil,endeol=nil,matches={},containers={},pos=1,last_matched_container=0,timer={},finished_line=false,returned=0};setmetatable(t,e);e.__index=e;return t;end function r.parse_table_row(t,i,s)local h=#t.matches;local r=t.pos;t:add_match(i,i,"+row");t.pos=o(t.subject,"%S",i+1);local d={};local l=t.pos;local c=false;while not c do local e,a,o,i,n=o(t.subject,"^(%:?)%-%-*(%:?)([ \t]*%|[ \t]*)",l);if a then local s="separator_default";if(#o>0)and(#i>0)then s="separator_center";elseif#i>0 then s="separator_right";elseif#o>0 then s="separator_left";end d[#d+1]={e,a-#n,s};l=a+1;if l==t.starteol then c=true;break;end else break;end end if c then for e=1,#d do t:add_match(a(d[e]));end t:add_match(t.starteol-1,t.starteol-1,"-row");t.pos=t.starteol;t.finished_line=true;return true;end local d=e:new(t.subject,t.warn);t:add_match(i,i,"+cell");local i=false;while t.pos<=s do local h,r;while not h do r,h=t:find("^[^|\r\n]*|");if not h then break;end if string.find(t.subject,"^\\",h-1)then d:feed(t.pos,h);t.pos=h+1;h=nil;else d:feed(t.pos,h-1);if d:in_verbatim()then d:feed(h,h);t.pos=h+1;h=nil;else t.pos=h+1;end end end i=h;if not i then break;end local i=d:get_matches();for e=1,#i do local a,o,s=a(i[e]);if(e==#i)and(s=="str")then while(n(t.subject,o)==32)and(o>=a)do o=o-1;end end t:add_match(a,o,s);end t:add_match(h,h,"-cell");if h<s then d=e:new(t.subject,t.warn);t:add_match(h,h,"+cell");t.pos=o(t.subject,"%S",t.pos);end end if not i then t.pos=r;for e=h,#t.matches do t.matches[e]=nil;end return false;else t:add_match(t.pos,t.pos,"-row");t.pos=t.starteol;t.finished_line=true;return true;end end function r.specs(n)return{{name="para",is_para=true,content="inline",continue=function()if n:find("^%S")then return true;else return false;end end,open=function(t)n:add_container(s:new(t,{inline_parser=e:new(n.subject,n.warn)}));n:add_match(n.pos,n.pos,"+para");return true;end,close=function()n:get_inline_matches();n:add_match(n.pos-1,n.pos-1,"-para");n.containers[#n.containers]=nil;end},{name="caption",is_para=false,content="inline",continue=function()return n:find("^%S");end,open=function(t)local a,a=n:find("^%^[ \t]+");if a then n.pos=a+1;n:add_container(s:new(t,{inline_parser=e:new(n.subject,n.warn)}));n:add_match(n.pos,n.pos,"+caption");return true;end end,close=function()n:get_inline_matches();n:add_match(n.pos-1,n.pos-1,"-caption");n.containers[#n.containers]=nil;end},{name="blockquote",content="block",continue=function()if n:find("^%>%s")then n.pos=n.pos+1;return true;else return false;end end,open=function(e)if n:find("^%>%s")then n:add_container(s:new(e));n:add_match(n.pos,n.pos,"+blockquote");n.pos=n.pos+1;return true;end end,close=function()n:add_match(n.pos,n.pos,"-blockquote");n.containers[#n.containers]=nil;end},{name="footnote",content="block",continue=function(e)if(n.indent>e.indent)or n:find("^[\r\n]")then return true;else return false;end end,open=function(e)local t,a,o=n:find("^%[%^([^]]+)%]:%s");if not t then return nil;end n:add_container(s:new(e,{note_label=o,indent=n.indent}));n:add_match(t,t,"+footnote");n:add_match(t+2,a-3,"note_label");n.pos=a;return true;end,close=function(e)n:add_match(n.pos,n.pos,"-footnote");n.containers[#n.containers]=nil;end},{name="thematic_break",content=nil,continue=function()return false;end,open=function(e)local t,a=n:find("^[-*][ \t]*[-*][ \t]*[-*][-* \t]*[\r\n]");if a then n:add_container(s:new(e));n:add_match(t,a,"thematic_break");n.pos=a;return true;end end,close=function(e)n.containers[#n.containers]=nil;end},{name="list_item",content="block",continue=function(e)if(n.indent>e.indent)or n:find("^[\r\n]")then return true;else return false;end end,open=function(e)local t,a=n:find("^[-*+:]%s");if not t then t,a=n:find("^%d+[.)]%s");end if not t then t,a=n:find("^%(%d+%)%s");end if not t then t,a=n:find("^[ivxlcdmIVXLCDM]+[.)]%s");end if not t then t,a=n:find("^%([ivxlcdmIVXLCDM]+%)%s");end if not t then t,a=n:find("^%a[.)]%s");end if not t then t,a=n:find("^%(%a%)%s");end if not t then return nil;end local o=i(n.subject,t,a-1);local r=nil;if n:find("^[*+-] %[[Xx ]%]%s",t+1)then o=i(n.subject,t,t+4);r=i(n.subject,t+3,t+3);end local o=h(o);if#o==0 then return nil;end local i={styles=o,indent=n.indent};n:add_container(s:new(e,i));local e="+list_item";for t=1,#o do e=e.."["..o[t].."]";end n:add_match(t,a-1,e);n.pos=a;if r then if r==" "then n:add_match(t+2,t+4,"checkbox_unchecked");else n:add_match(t+2,t+4,"checkbox_checked");end n.pos=t+5;end return true;end,close=function(e)n:add_match(n.pos,n.pos,"-list_item");n.containers[#n.containers]=nil;end},{name="reference_definition",content=nil,continue=function(e)if e.indent>=n.indent then return false;end local e,e,t=n:find("^(%S+)");if e then n:add_match((e-#t)+1,e,"reference_value");n.pos=e+1;end return true;end,open=function(e)local t,a,o,i=n:find("^%[([^]\r\n]*)%]:[ \t]*(%S*)");if t then n:add_container(s:new(e,{key=o,indent=n.indent}));n:add_match(t,t,"+reference_definition");n:add_match(t,t+#o+1,"reference_key");if#i>0 then n:add_match((a-#i)+1,a,"reference_value");end n.pos=a+1;return true;end end,close=function(e)n:add_match(n.pos,n.pos,"-reference_definition");n.containers[#n.containers]=nil;end},{name="heading",content="inline",continue=function(e)local t,a=n:find("^%#+%s");if t and a and(e.level==(a-t))then n.pos=a;return true;else return false;end end,open=function(t)local a,i=n:find("^#+");if i and o(n.subject,"^%s",i+1)then local o=(i-a)+1;n:add_container(s:new(t,{level=o,inline_parser=e:new(n.subject,n.warn)}));n:add_match(a,i,"+heading");n.pos=i+1;return true;end end,close=function(e)n:get_inline_matches();local e=n.matches[#n.matches]or(n.pos-1);local e,e,t=a(e);n:add_match(e,e,"-heading");n.containers[#n.containers]=nil;end},{name="code_block",content="text",continue=function(e)local t=i(e.border,1,1);local t,a,o=n:find("^("..e.border..t.."*)[ \t]*[\r\n]");if a then e.end_fence_sp=t;e.end_fence_ep=(t+#o)-1;n.pos=a;n.finished_line=true;return false;else return true;end end,open=function(e)local t,a,i,h,r=n:find("^(~~~~*)([ \t]*)(%S*)[ \t]*[\r\n]");if not a then t,a,i,h,r=n:find("^(````*)([ \t]*)([^%s`]*)[ \t]*[\r\n]");end if i then local o=(o(r,"^=")and true)or false;n:add_container(s:new(e,{border=i,indent=n.indent}));n:add_match(t,(t+#i)-1,"+code_block");if#r>0 then local e=t+#i+#h;if o then n:add_match(e,(e+#r)-1,"raw_format");else n:add_match(e,(e+#r)-1,"code_language");end end n.pos=a;n.finished_line=true;return true;end end,close=function(e)local t=e.end_fence_sp or n.pos;local e=e.end_fence_ep or n.pos;n:add_match(t,e,"-code_block");if t==e then n.warn({pos=n.pos,message="Unclosed code block"});end n.containers[#n.containers]=nil;end},{name="fenced_div",content="block",continue=function(e)if n.containers[#n.containers].name=="code_block"then return true;end local t,a,o=n:find("^(::::*)[ \t]*[r\n]");if a and(#o>=e.equals)then e.end_fence_sp=t;e.end_fence_ep=(t+#o)-1;n.pos=a;return false;else return true;end end,open=function(e)local t,a,i=n:find("^(::::*)[ \t]*");if not a then return false;end local a,h=o(n.subject,"^[%w_-]*",a+1);local o,o=o(n.subject,"^[ \t]*[\r\n]",h+1);if o then n:add_container(s:new(e,{equals=#i}));n:add_match(t,h,"+div");if h>=a then n:add_match(a,h,"class");end n.pos=o+1;n.finished_line=true;return true;end end,close=function(e)local t=e.end_fence_sp or n.pos;local e=e.end_fence_ep or n.pos;n:add_match(t,e,"-div");if t==e then n.warn({pos=n.pos,message="Unclosed div"});end n.containers[#n.containers]=nil;end},{name="table",content="cells",continue=function(e)local e,t=n:find("^|[^\r\n]*|");local a=" *[\r\n]";if e and a then return n:parse_table_row(e,t);end end,open=function(e)local t,a=n:find("^|[^\r\n]*|");local o=" *[\r\n]";if t and o then n:add_container(s:new(e,{columns=0}));n:add_match(t,t,"+table");if n:parse_table_row(t,a)then return true;else n.containers[#n.containers]=nil;return false;end end end,close=function(e)n:add_match(n.pos,n.pos,"-table");n.containers[#n.containers]=nil;end},{name="attributes",content="attributes",open=function(e)if n:find("^%{")then local t=t.AttributeParser:new(n.subject);local a,o=t:feed(n.pos,n.endeol);if(a=="fail")or((o+1)<n.endeol)then return false;else n:add_container(s:new(e,{status=a,indent=n.indent,startpos=n.pos,slices={},attribute_parser=t}));local e=n.containers[#n.containers];e.slices={{n.pos,n.endeol}};n.pos=n.starteol;return true;end end end,continue=function(t)if n.indent>t.indent then table.insert(t.slices,{n.pos,n.endeol});local e,a=t.attribute_parser:feed(n.pos,n.endeol);t.status=e;if(e~="fail")or((a+1)<n.endeol)then n.pos=n.starteol;return true;end end if t.status=="done"then return false;else local a=n:specs()[1];local e=s:new(a,{inline_parser=e:new(n.subject,n.warn)});n:add_match(t.startpos,t.startpos,"+para");n.containers[#n.containers]=e;e.inline_parser.attribute_slices=t.slices;e.inline_parser:reparse_attributes();n.pos=e.inline_parser.lastpos+1;return true;end end,close=function(e)local t=e.attribute_parser:get_matches();n:add_match(e.startpos,e.startpos,"+block_attributes");for e=1,#t do n:add_match(a(t[e]));end n:add_match(n.pos,n.pos,"-block_attributes");n.containers[#n.containers]=nil;end}};end function r.get_inline_matches(e)local t=e.containers[#e.containers].inline_parser:get_matches();for a=1,#t do e.matches[#e.matches+1]=t[a];end end function r.find(e,t)return o(e.subject,t,e.pos);end function r.add_match(e,t,a,o)e.matches[#e.matches+1]={t,a,o};end function r.add_container(e,t)local a=e.last_matched_container;while(#e.containers>a)or((#e.containers>0)and(e.containers[#e.containers].content~="block"))do e.containers[#e.containers]:close();end e.containers[#e.containers+1]=t;end function r.skip_space(e)local t,a=o(e.subject,"[^ \t]",e.pos);if t then e.indent=t-e.startline;e.pos=t;end end function r.get_eol(e)local t,a=o(e.subject,"[\r]?[\n]",e.pos);if not a then t,a=#e.subject,#e.subject;end e.starteol=t;e.endeol=a;end function r.events(e)local t=e:specs();local o=t[1];local i=#e.subject;return function()while e.pos<=i do if e.returned<#e.matches then e.returned=e.returned+1;return a(e.matches[e.returned]);end e.indent=0;e.startline=e.pos;e.finished_line=false;e:get_eol();e.last_matched_container=0;local a=0;while a<#e.containers do a=a+1;local t=e.containers[a];e:skip_space();if t:continue()then e.last_matched_container=a;else break;end end if e.finished_line then while#e.containers>e.last_matched_container do e.containers[#e.containers]:close();end end if not e.finished_line then e:skip_space();local a=e.pos==e.starteol;local i=false;local n=e.containers[e.last_matched_container];local n=not a and(not n or(n.content=="block"))and not e:find("^%a+%s");while n do n=false;for a=1,#t do local t=t[a];if not t.is_para then if t:open()then e.last_matched_container=#e.containers;if e.finished_line then n=false;else e:skip_space();i=true;n=t.content=="block";end break;end end end end if not e.finished_line then e:skip_space();a=e.pos==e.starteol;local t=not a and not i and(e.last_matched_container<#e.containers)and(e.containers[#e.containers].content=="inline");local n=e.last_matched_container;if not t then while(#e.containers>0)and(#e.containers>n)do e.containers[#e.containers]:close();end end local t=e.containers[#e.containers];if not t or(t.content=="block")then if a then if not i then e:add_match(e.pos,e.endeol,"blankline");end else o:open();end t=e.containers[#e.containers];end if t then if t.content=="text"then local a=e.pos;if t.indent and(e.indent>t.indent)then a=a-(e.indent-t.indent);end e:add_match(a,e.endeol,"str");elseif t.content=="inline"then if not a then t.inline_parser:feed(e.pos,e.endeol);end end end end end e.pos=e.endeol+1;end while#e.containers>0 do e.containers[#e.containers]:close();end if e.returned<#e.matches then e.returned=e.returned+1;return a(e.matches[e.returned]);end end;end return{Parser=r,Container=s};end;package.preload["djot.ast"]=function()if not utf8 then local e=pairs;function pairs(t)local a=getmetatable(t);if(type(a)=="table")and(type(a.__pairs)=="function")then return a.__pairs(t);else return e(t);end end end local e=unpack or table.unpack;local e,t,a,o,i=string.find,string.lower,string.sub,string.rep,string.format;local function n(e)local t={line={},col={},charpos={}};local a=1;local o=0;local i=0;local n=1;local s=string.byte(e,n);while s do o=o+1;i=i+1;local h;if s<192 then h=n+1;elseif s<224 then h=n+2;elseif s<240 then h=n+3;else h=n+4;end while n<h do t.line[n]=a;t.col[n]=o;t.charpos[n]=i;n=n+1;end if s==10 then a=a+1;o=0;end s=string.byte(e,n);end t.line[n]=a+1;t.col[n]=1;t.charpos[n]=i+1;return t;end local function s(e)local t={};if e.s then t[#t+1]=e.s;elseif e.t=="softbreak"then t[#t+1]="\n";elseif e.c then for a=1,#e.c do t[#t+1]=s(e.c[a]);end end return table.concat(t);end local h={i=1,v=5,x=10,l=50,c=100,d=500,m=1000};local function r(e)local o=0;local i=0;local n=#e;while n>0 do local t=t(a(e,n,n));local t=h[t];if t<i then o=o-t;else o=o+t;end assert(t~=nil,"Encountered bad character in roman numeral "..e);i=t;n=n-1;end return o;end local function t(e,t)local t=string.gsub(t,"%p","");local e=string.gsub(e,"%p","");if t=="1"then return tonumber(e);elseif t=="A"then return(string.byte(e)-string.byte("A"))+1;elseif t=="a"then return(string.byte(e)-string.byte("a"))+1;elseif t=="I"then return r(e);elseif t=="i"then return r(e);elseif t==""then return nil;end end local h={image_marker=true,escape=true,blankline=true};local function r(e,t)return function(a)local o={};local i=nil;i=next(a,i);while i do o[#o+1]=i;i=next(a,i);end table.sort(o,e);local e=0;local function i(a,i)e=e+1;local e=o[e];local t=t(e);if e then return t,a[e];else return nil;end end return i,a,nil;end;end local d={};local l={children="c",text="s",tag="t"};local c={c="children",s="text",t="tag"};function d.__index(e,t)local a=l[t];if a then return rawget(e,a);else return rawget(e,t);end end function d.__newindex(e,t,a)local o=l[t];if o then rawset(e,o,a);else rawset(e,t,a);end end d.__pairs=r(function(e,t)if e=="t"then return true;elseif e=="s"then return t~="t";elseif e=="c"then return(t=="references")or(t=="footnotes");elseif e=="references"then return t=="footnotes";elseif e=="footnotes"then return false;elseif(t=="t")or(t=="s")then return false;elseif(t=="c")or(t=="references")or(t=="footnotes")then return true;else return e<t;end end,function(e)return c[e]or e;end);local function l(e)local e={t=e,c=nil};setmetatable(e,d);return e;end local function d(e,t)if not e.c then e.c={t};else e.c[#e.c+1]=t;end end local function c(e)return e.c and(#e.c>0);end local function u(e)local e=e or{};setmetatable(e,{__pairs=r(function(e,t)return e<t;end,function(e)return e;end)});return e;end local function r(e,t,a)a=a:gsub("%s+"," ");if t=="class"then if e.class then e.class=e.class.." "..a;else e.class=a;end else e[t]=a;end end local function m(e,t)if t then for t,a in pairs(t)do r(e,t,a);end end end local function w(e,t)e.attr=e.attr or u();local a=1;while a<=#t do local o,i=t[a].t,t[a].s;if(o=="id")or(o=="class")then r(e.attr,o,i);elseif o=="key"then local t=t[a+1];if t.t=="value"then r(e.attr,i,t.s:gsub("\\(%p)","%1"));end a=a+1;end a=a+1;end end local function f(e)e.t="definition_list_item";if not c(e)then e.c={};end if e.c[1]and(e.c[1].t=="para")then e.c[1].t="term";else table.insert(e.c,1,l("term"));end if e.c[2]then local t=l("definition");t.c={};for a=2,#e.c do t.c[#t.c+1]=e.c[a];e.c[a]=nil;end e.c[2]=t;end end local function g(e)local a=nil;for e,t in pairs(e.styles)do if not a or(t<a.priority)then a={name=e,priority=t};end end e.list_style=a.name;e.styles=nil;e.start=t(e.startmarker,e.list_style);e.startmarker=nil;end local function t(e)if not c(e)then return e;end local t=l("doc");local a={{sec=t,level=0}};for e,e in ipairs(e.c)do if e.t=="heading"then local t=e.level;local o=((#a>0)and a[#a].level)or 0;if o>=t then while a[#a].level>=t do local e=table.remove(a).sec;d(a[#a].sec,e);end end local o=l("section");o.attr=u({id=e.attr.id});e.attr.id=nil;d(o,e);a[#a+1]={sec=o,level=t};else d(a[#a].sec,e);end end while#a>1 do local e=table.remove(a).sec;d(a[#a].sec,e);end assert(a[1].sec==t);return t;end local function y(o,i)local m=o.subject;local y=o.warn;if not y then function y()end end local p;if i then p=n(m);end local i={};local n={};local b={};local function v(e)local e=e:gsub("[][~!@#$%^&*(){}`,.<>\\|=+/?]",""):gsub("^%s+",""):gsub("%s+$",""):gsub("%s+","-");local t=0;local a=e;while b[a]do t=t+1;a=e..tostring(t);end b[a]=true;return a;end local function k(e)if e then return string.format("%d:%d:%d",p.line[e],p.col[e],p.charpos[e]);end end local function x(e,t)if p then local t=k(t);if e.pos then e.pos[1]=t;else e.pos={t,nil};end end end local function j(e,t)if p and e.pos then local t=k(t);if e.pos then e.pos[2]=t;else e.pos={nil,t};end end end local k={heading=true,div=true,list=true,list_item=true,code_block=true,para=true,blockquote=true,table=true,thematic_break=true,raw_block=true,reference_definition=true,footnote=true};local q=nil;local function z(e)if q and k[e.t:gsub("%[.*%]","")]then for t=1,#q do w(e,q[t]);end if e.attr and e.attr.id then b[e.attr.id]=true;end q=nil;end end local b={};local k=0;local function E(e,t,a)local o=0;if a then while(b[t]=="blankline")or(b[t]=="-list_item")do t=t-1;end end for e=e,t do local t=b[e];if t=="blankline"then if not(string.find(b[e+1],"%+list_item")or(string.find(b[e+1],"%-list_item")and(a or string.find(b[e+2],"%-list_item"))))then o=o+1;end end end return o==0;end local function T(e,t)if(e[#e].t=="list")and not((t.t=="list_item")or(t.t=="definition_list_item"))then local t=table.remove(e);T(e,t);end if t.t=="list"then if t.pos then t.pos[2]=t.c[#t.c].pos[2];end local e=true;for a=1,#t.c do e=e and E(t.c[a].startidx,t.c[a].endidx,a==#t.c);t.c[a].startidx=nil;t.c[a].endidx=nil;end t.tight=e;g(t);end d(e[#e],t);end local function d(t,o,d,g)k=k+1;local p,E=string.match(g,"^([-+]?)(.+)");b[k]=g;if h[E]then return;end if p=="+"then local a=l(E);x(a,o);z(a);if E=="heading"then a.level=(d-o)+1;elseif e(E,"^list_item")then a.t="list_item";a.startidx=k;local e,e,e=string.find(E,"(%[.*)");local i={};if e then local t=1;for e in string.gmatch(e,"%[([^]]*)%]")do i[e]=t;t=t+1;end end a.style_marker=e;local e=string.match(m,"^%S+",o);local n=t[#t];if n.t~="list"then local n=l("list");x(n,o);n.styles=i;n.attr=a.attr;n.startmarker=e;a.attr=nil;t[#t+1]=n;else local s={};local h=false;for e,t in pairs(i)do if n.styles[e]then h=true;s[e]=i[e];end end if h then n.styles=s;else local n=table.remove(t);T(t,n);local n=l("list");x(n,o);n.styles=i;n.attr=a.attr;n.startmarker=e;a.attr=nil;t[#t+1]=n;end end end t[#t+1]=a;elseif p=="-"then if t[#t].t=="list"then local e=table.remove(t);T(t,e);end if E==t[#t].t then local h=table.remove(t);j(h,d);if h.t=="block_attributes"then if not q then q={};end q[#q+1]=h.c;return;elseif h.t=="attributes"then local e=t[#t];local e=c(e)and e.c[#e.c];if e then local i=false;if e.t=="str"then local o=string.find(e.s,"[^%s]+$");if not o then i=true;elseif o>1 then local i=l("str");i.s=a(e.s,o,-1);e.s=a(e.s,1,o-1);T(t,i);e=i;end end if c(h)and not i then w(e,h.c);else y({message="Ignoring unattached attribute",pos=o});end else y({message="Ignoring unattached attribute",pos=o});end return;elseif E=="reference_definition"then local e="";local t;for a=1,#h.c do if h.c[a].t=="reference_key"then t=h.c[a].s;end if h.c[a].t=="reference_value"then e=e..h.c[a].s;end end i[t]=l("reference");i[t].destination=e;if h.attr then i[t].attr=h.attr;end return;elseif E=="footnote"then local e;if c(h)and(h.c[1].t=="note_label")then e=h.c[1].s;table.remove(h.c,1);end if e then n[e]=h;end return;elseif E=="table"then local t=1;local a={};while t<=#h.c do local o,i,n;if h.c[t].t=="row"then local s=h.c[t].c;for t=1,#s do o,n,i=e(s[t].t,"^separator_(.*)");if not o then break;end a[t]=i;end if o and(#a>0)then local e=h.c[t-1];if e and(e.t=="row")then e.head=true;for t=1,#e.c do e.c[t].head=true;if a[t]~="default"then e.c[t].align=a[t];end end end table.remove(h.c,t);else if#a>0 then for e=1,#h.c[t].c do if a[e]~="default"then h.c[t].c[e].align=a[e];end end end t=t+1;end end end elseif E=="code_block"then if c(h)then if h.c[1].t=="code_language"then h.lang=h.c[1].s;table.remove(h.c,1);elseif h.c[1].t=="raw_format"then local e=h.c[1].s:sub(2);table.remove(h.c,1);h.t="raw_block";h.format=e;end end h.s=s(h);h.c=nil;elseif e(E,"^list_item")then h.t="list_item";h.endidx=k;if h.style_marker=="[:]"then f(h);end if(h.style_marker=="[X]")and c(h)then if h.c[1].t=="checkbox_checked"then h.checkbox="checked";table.remove(h.c,1);elseif h.c[1].t=="checkbox_unchecked"then h.checkbox="unchecked";table.remove(h.c,1);end end h.style_marker=nil;elseif E=="inline_math"then h.t="math";h.attr=u({class="math inline"});elseif E=="display_math"then h.t="math";h.attr=u({class="math display"});elseif E=="imagetext"then h.t="image";elseif E=="linktext"then h.t="link";elseif E=="div"then h.c=h.c or{};if h.c[1]and(h.c[1].t=="class")then h.attr=u(h.attr);r(h.attr,"class",s(h.c[1]));table.remove(h.c,1);end elseif E=="verbatim"then local t=s(h);if e(t,"^ +`")then t=t:sub(2);end if e(t,"` +$")then t=t:sub(1,#t-1);end h.s=t;h.c=nil;elseif E=="url"then h.destination=s(h);elseif E=="email"then h.destination="mailto:"..s(h);elseif E=="caption"then local e=t[#t];local e=c(e)and e.c[#e.c];if e and(e.t=="table")then table.insert(e.c,1,h);else y({message="Ignoring caption without preceding table",pos=o});end return;elseif E=="heading"then local e=s(h):gsub("^%s+",""):gsub("%s+$","");if not h.attr then h.attr=u({});end if not h.attr.id then r(h.attr,"id",v(e));end if not i[e]then i[e]=l("reference");i[e].destination="#"..h.attr.id;end elseif E=="destination"then local e=t[#t];local e=c(e)and e.c[#e.c];assert(e and((e.t=="image")or(e.t=="link")),"destination with no preceding link or image");e.destination=s(h):gsub("\r?\n","");return;elseif E=="reference"then local e=t[#t];local e=c(e)and e.c[#e.c];assert(e and((e.t=="image")or(e.t=="link")),"reference with no preceding link or image");if c(h)then e.reference=s(h):gsub("\r?\n"," ");else e.reference=s(e):gsub("\r?\n"," ");end return;end T(t,h);else assert(false,"unmatched "..g.." encountered at byte "..o);return;end else local e=l(E);z(e);x(e,o);j(e,d);if E=="softbreak"then e.s=nil;elseif E=="reference_key"then e.s=a(m,o+1,d-1);elseif E=="footnote_reference"then e.s=a(m,o+2,d-1);elseif E=="emoji"then e.alias=a(m,o+1,d-1);elseif E=="raw_format"then local t=t[#t];local t=c(t)and t.c[#t.c];if t and(t.t=="verbatim")then local e=s(t);t.t="raw_inline";t.s=e;t.c=nil;t.format=a(m,o+2,d-1);return;else e.s=a(m,o,d);end else e.s=a(m,o,d);end T(t,e);end end local e=l("doc");local a={e};for e,t,o in o:events()do d(a,e,t,o);end while#a>1 do local e=table.remove(a);T(a,e);if p and a[#a].pos then a[#a].pos[2]=e.pos[2];end end e=t(e);e.references=i;e.footnotes=n;return e;end local function e(t,a,n)n=n or 0;a:write(o(" ",n));if n>128 then a:write("(((DEEPLY NESTED CONTENT OMITTED)))\n");return;end if t.t then a:write(t.t);if t.pos then a:write(i(" (%s-%s)",t.pos[1],t.pos[2]));end for e,t in pairs(t)do if(type(e)=="string")and(e~="children")and(e~="tag")and(e~="pos")and(e~="attr")and(e~="references")and(e~="footnotes")then a:write(i(" %s=%q",e,tostring(t)));end end if t.attr then for e,t in pairs(t.attr)do a:write(i(" %s=%q",e,t));end end else io.stderr:write("Encountered node without tag:\n"..require("inspect")(t));os.exit(1);end a:write("\n");if t.c then for t,t in ipairs(t.c)do e(t,a,n+2);end end end local function t(t,a)e(t,a,0);if next(t.references)~=nil then a:write("references\n");for t,o in pairs(t.references)do a:write(i("  [%q] =\n",t));e(o,a,4);end end if next(t.footnotes)~=nil then a:write("footnotes\n");for t,o in pairs(t.footnotes)do a:write(i("  [%q] =\n",t));e(o,a,4);end end end return{to_ast=y,render=t,insert_attribute=r,copy_attributes=m,new_attributes=u,new_node=l,add_child=d,has_children=c};end;package.preload["djot.emoji"]=function()return{grinning="😀",smiley="😃",smile="😄",grin="😁",laughing="😆",satisfied="😆",sweat_smile="😅",rofl="🤣",joy="😂",slightly_smiling_face="🙂",upside_down_face="🙃",wink="😉",blush="😊",innocent="😇",smiling_face_with_three_hearts="🥰",heart_eyes="😍",star_struck="🤩",kissing_heart="😘",kissing="😗",relaxed="☺️",kissing_closed_eyes="😚",kissing_smiling_eyes="😙",smiling_face_with_tear="🥲",yum="😋",stuck_out_tongue="😛",stuck_out_tongue_winking_eye="😜",zany_face="🤪",stuck_out_tongue_closed_eyes="😝",money_mouth_face="🤑",hugs="🤗",hand_over_mouth="🤭",shushing_face="🤫",thinking="🤔",zipper_mouth_face="🤐",raised_eyebrow="🤨",neutral_face="😐",expressionless="😑",no_mouth="😶",face_in_clouds="😶‍🌫️",smirk="😏",unamused="😒",roll_eyes="🙄",grimacing="😬",face_exhaling="😮‍💨",lying_face="🤥",relieved="😌",pensive="😔",sleepy="😪",drooling_face="🤤",sleeping="😴",mask="😷",face_with_thermometer="🤒",face_with_head_bandage="🤕",nauseated_face="🤢",vomiting_face="🤮",sneezing_face="🤧",hot_face="🥵",cold_face="🥶",woozy_face="🥴",dizzy_face="😵",face_with_spiral_eyes="😵‍💫",exploding_head="🤯",cowboy_hat_face="🤠",partying_face="🥳",disguised_face="🥸",sunglasses="😎",nerd_face="🤓",monocle_face="🧐",confused="😕",worried="😟",slightly_frowning_face="🙁",frowning_face="☹️",open_mouth="😮",hushed="😯",astonished="😲",flushed="😳",pleading_face="🥺",frowning="😦",anguished="😧",fearful="😨",cold_sweat="😰",disappointed_relieved="😥",cry="😢",sob="😭",scream="😱",confounded="😖",persevere="😣",disappointed="😞",sweat="😓",weary="😩",tired_face="😫",yawning_face="🥱",triumph="😤",rage="😡",pout="😡",angry="😠",cursing_face="🤬",smiling_imp="😈",imp="👿",skull="💀",skull_and_crossbones="☠️",hankey="💩",poop="💩",shit="💩",clown_face="🤡",japanese_ogre="👹",japanese_goblin="👺",ghost="👻",alien="👽",space_invader="👾",robot="🤖",smiley_cat="😺",smile_cat="😸",joy_cat="😹",heart_eyes_cat="😻",smirk_cat="😼",kissing_cat="😽",scream_cat="🙀",crying_cat_face="😿",pouting_cat="😾",see_no_evil="🙈",hear_no_evil="🙉",speak_no_evil="🙊",kiss="💋",love_letter="💌",cupid="💘",gift_heart="💝",sparkling_heart="💖",heartpulse="💗",heartbeat="💓",revolving_hearts="💞",two_hearts="💕",heart_decoration="💟",heavy_heart_exclamation="❣️",broken_heart="💔",heart_on_fire="❤️‍🔥",mending_heart="❤️‍🩹",heart="❤️",orange_heart="🧡",yellow_heart="💛",green_heart="💚",blue_heart="💙",purple_heart="💜",brown_heart="🤎",black_heart="🖤",white_heart="🤍",["100"]="💯",anger="💢",boom="💥",collision="💥",dizzy="💫",sweat_drops="💦",dash="💨",hole="🕳️",bomb="💣",speech_balloon="💬",eye_speech_bubble="👁️‍🗨️",left_speech_bubble="🗨️",right_anger_bubble="🗯️",thought_balloon="💭",zzz="💤",wave="👋",raised_back_of_hand="🤚",raised_hand_with_fingers_splayed="🖐️",hand="✋",raised_hand="✋",vulcan_salute="🖖",ok_hand="👌",pinched_fingers="🤌",pinching_hand="🤏",v="✌️",crossed_fingers="🤞",love_you_gesture="🤟",metal="🤘",call_me_hand="🤙",point_left="👈",point_right="👉",point_up_2="👆",middle_finger="🖕",fu="🖕",point_down="👇",point_up="☝️",["+1"]="👍",thumbsup="👍",["-1"]="👎",thumbsdown="👎",fist_raised="✊",fist="✊",fist_oncoming="👊",facepunch="👊",punch="👊",fist_left="🤛",fist_right="🤜",clap="👏",raised_hands="🙌",open_hands="👐",palms_up_together="🤲",handshake="🤝",pray="🙏",writing_hand="✍️",nail_care="💅",selfie="🤳",muscle="💪",mechanical_arm="🦾",mechanical_leg="🦿",leg="🦵",foot="🦶",ear="👂",ear_with_hearing_aid="🦻",nose="👃",brain="🧠",anatomical_heart="🫀",lungs="🫁",tooth="🦷",bone="🦴",eyes="👀",eye="👁️",tongue="👅",lips="👄",baby="👶",child="🧒",boy="👦",girl="👧",adult="🧑",blond_haired_person="👱",man="👨",bearded_person="🧔",man_beard="🧔‍♂️",woman_beard="🧔‍♀️",red_haired_man="👨‍🦰",curly_haired_man="👨‍🦱",white_haired_man="👨‍🦳",bald_man="👨‍🦲",woman="👩",red_haired_woman="👩‍🦰",person_red_hair="🧑‍🦰",curly_haired_woman="👩‍🦱",person_curly_hair="🧑‍🦱",white_haired_woman="👩‍🦳",person_white_hair="🧑‍🦳",bald_woman="👩‍🦲",person_bald="🧑‍🦲",blond_haired_woman="👱‍♀️",blonde_woman="👱‍♀️",blond_haired_man="👱‍♂️",older_adult="🧓",older_man="👴",older_woman="👵",frowning_person="🙍",frowning_man="🙍‍♂️",frowning_woman="🙍‍♀️",pouting_face="🙎",pouting_man="🙎‍♂️",pouting_woman="🙎‍♀️",no_good="🙅",no_good_man="🙅‍♂️",ng_man="🙅‍♂️",no_good_woman="🙅‍♀️",ng_woman="🙅‍♀️",ok_person="🙆",ok_man="🙆‍♂️",ok_woman="🙆‍♀️",tipping_hand_person="💁",information_desk_person="💁",tipping_hand_man="💁‍♂️",sassy_man="💁‍♂️",tipping_hand_woman="💁‍♀️",sassy_woman="💁‍♀️",raising_hand="🙋",raising_hand_man="🙋‍♂️",raising_hand_woman="🙋‍♀️",deaf_person="🧏",deaf_man="🧏‍♂️",deaf_woman="🧏‍♀️",bow="🙇",bowing_man="🙇‍♂️",bowing_woman="🙇‍♀️",facepalm="🤦",man_facepalming="🤦‍♂️",woman_facepalming="🤦‍♀️",shrug="🤷",man_shrugging="🤷‍♂️",woman_shrugging="🤷‍♀️",health_worker="🧑‍⚕️",man_health_worker="👨‍⚕️",woman_health_worker="👩‍⚕️",student="🧑‍🎓",man_student="👨‍🎓",woman_student="👩‍🎓",teacher="🧑‍🏫",man_teacher="👨‍🏫",woman_teacher="👩‍🏫",judge="🧑‍⚖️",man_judge="👨‍⚖️",woman_judge="👩‍⚖️",farmer="🧑‍🌾",man_farmer="👨‍🌾",woman_farmer="👩‍🌾",cook="🧑‍🍳",man_cook="👨‍🍳",woman_cook="👩‍🍳",mechanic="🧑‍🔧",man_mechanic="👨‍🔧",woman_mechanic="👩‍🔧",factory_worker="🧑‍🏭",man_factory_worker="👨‍🏭",woman_factory_worker="👩‍🏭",office_worker="🧑‍💼",man_office_worker="👨‍💼",woman_office_worker="👩‍💼",scientist="🧑‍🔬",man_scientist="👨‍🔬",woman_scientist="👩‍🔬",technologist="🧑‍💻",man_technologist="👨‍💻",woman_technologist="👩‍💻",singer="🧑‍🎤",man_singer="👨‍🎤",woman_singer="👩‍🎤",artist="🧑‍🎨",man_artist="👨‍🎨",woman_artist="👩‍🎨",pilot="🧑‍✈️",man_pilot="👨‍✈️",woman_pilot="👩‍✈️",astronaut="🧑‍🚀",man_astronaut="👨‍🚀",woman_astronaut="👩‍🚀",firefighter="🧑‍🚒",man_firefighter="👨‍🚒",woman_firefighter="👩‍🚒",police_officer="👮",cop="👮",policeman="👮‍♂️",policewoman="👮‍♀️",detective="🕵️",male_detective="🕵️‍♂️",female_detective="🕵️‍♀️",guard="💂",guardsman="💂‍♂️",guardswoman="💂‍♀️",ninja="🥷",construction_worker="👷",construction_worker_man="👷‍♂️",construction_worker_woman="👷‍♀️",prince="🤴",princess="👸",person_with_turban="👳",man_with_turban="👳‍♂️",woman_with_turban="👳‍♀️",man_with_gua_pi_mao="👲",woman_with_headscarf="🧕",person_in_tuxedo="🤵",man_in_tuxedo="🤵‍♂️",woman_in_tuxedo="🤵‍♀️",person_with_veil="👰",man_with_veil="👰‍♂️",woman_with_veil="👰‍♀️",bride_with_veil="👰‍♀️",pregnant_woman="🤰",breast_feeding="🤱",woman_feeding_baby="👩‍🍼",man_feeding_baby="👨‍🍼",person_feeding_baby="🧑‍🍼",angel="👼",santa="🎅",mrs_claus="🤶",mx_claus="🧑‍🎄",superhero="🦸",superhero_man="🦸‍♂️",superhero_woman="🦸‍♀️",supervillain="🦹",supervillain_man="🦹‍♂️",supervillain_woman="🦹‍♀️",mage="🧙",mage_man="🧙‍♂️",mage_woman="🧙‍♀️",fairy="🧚",fairy_man="🧚‍♂️",fairy_woman="🧚‍♀️",vampire="🧛",vampire_man="🧛‍♂️",vampire_woman="🧛‍♀️",merperson="🧜",merman="🧜‍♂️",mermaid="🧜‍♀️",elf="🧝",elf_man="🧝‍♂️",elf_woman="🧝‍♀️",genie="🧞",genie_man="🧞‍♂️",genie_woman="🧞‍♀️",zombie="🧟",zombie_man="🧟‍♂️",zombie_woman="🧟‍♀️",massage="💆",massage_man="💆‍♂️",massage_woman="💆‍♀️",haircut="💇",haircut_man="💇‍♂️",haircut_woman="💇‍♀️",walking="🚶",walking_man="🚶‍♂️",walking_woman="🚶‍♀️",standing_person="🧍",standing_man="🧍‍♂️",standing_woman="🧍‍♀️",kneeling_person="🧎",kneeling_man="🧎‍♂️",kneeling_woman="🧎‍♀️",person_with_probing_cane="🧑‍🦯",man_with_probing_cane="👨‍🦯",woman_with_probing_cane="👩‍🦯",person_in_motorized_wheelchair="🧑‍🦼",man_in_motorized_wheelchair="👨‍🦼",woman_in_motorized_wheelchair="👩‍🦼",person_in_manual_wheelchair="🧑‍🦽",man_in_manual_wheelchair="👨‍🦽",woman_in_manual_wheelchair="👩‍🦽",runner="🏃",running="🏃",running_man="🏃‍♂️",running_woman="🏃‍♀️",woman_dancing="💃",dancer="💃",man_dancing="🕺",business_suit_levitating="🕴️",dancers="👯",dancing_men="👯‍♂️",dancing_women="👯‍♀️",sauna_person="🧖",sauna_man="🧖‍♂️",sauna_woman="🧖‍♀️",climbing="🧗",climbing_man="🧗‍♂️",climbing_woman="🧗‍♀️",person_fencing="🤺",horse_racing="🏇",skier="⛷️",snowboarder="🏂",golfing="🏌️",golfing_man="🏌️‍♂️",golfing_woman="🏌️‍♀️",surfer="🏄",surfing_man="🏄‍♂️",surfing_woman="🏄‍♀️",rowboat="🚣",rowing_man="🚣‍♂️",rowing_woman="🚣‍♀️",swimmer="🏊",swimming_man="🏊‍♂️",swimming_woman="🏊‍♀️",bouncing_ball_person="⛹️",bouncing_ball_man="⛹️‍♂️",basketball_man="⛹️‍♂️",bouncing_ball_woman="⛹️‍♀️",basketball_woman="⛹️‍♀️",weight_lifting="🏋️",weight_lifting_man="🏋️‍♂️",weight_lifting_woman="🏋️‍♀️",bicyclist="🚴",biking_man="🚴‍♂️",biking_woman="🚴‍♀️",mountain_bicyclist="🚵",mountain_biking_man="🚵‍♂️",mountain_biking_woman="🚵‍♀️",cartwheeling="🤸",man_cartwheeling="🤸‍♂️",woman_cartwheeling="🤸‍♀️",wrestling="🤼",men_wrestling="🤼‍♂️",women_wrestling="🤼‍♀️",water_polo="🤽",man_playing_water_polo="🤽‍♂️",woman_playing_water_polo="🤽‍♀️",handball_person="🤾",man_playing_handball="🤾‍♂️",woman_playing_handball="🤾‍♀️",juggling_person="🤹",man_juggling="🤹‍♂️",woman_juggling="🤹‍♀️",lotus_position="🧘",lotus_position_man="🧘‍♂️",lotus_position_woman="🧘‍♀️",bath="🛀",sleeping_bed="🛌",people_holding_hands="🧑‍🤝‍🧑",two_women_holding_hands="👭",couple="👫",two_men_holding_hands="👬",couplekiss="💏",couplekiss_man_woman="👩‍❤️‍💋‍👨",couplekiss_man_man="👨‍❤️‍💋‍👨",couplekiss_woman_woman="👩‍❤️‍💋‍👩",couple_with_heart="💑",couple_with_heart_woman_man="👩‍❤️‍👨",couple_with_heart_man_man="👨‍❤️‍👨",couple_with_heart_woman_woman="👩‍❤️‍👩",family="👪",family_man_woman_boy="👨‍👩‍👦",family_man_woman_girl="👨‍👩‍👧",family_man_woman_girl_boy="👨‍👩‍👧‍👦",family_man_woman_boy_boy="👨‍👩‍👦‍👦",family_man_woman_girl_girl="👨‍👩‍👧‍👧",family_man_man_boy="👨‍👨‍👦",family_man_man_girl="👨‍👨‍👧",family_man_man_girl_boy="👨‍👨‍👧‍👦",family_man_man_boy_boy="👨‍👨‍👦‍👦",family_man_man_girl_girl="👨‍👨‍👧‍👧",family_woman_woman_boy="👩‍👩‍👦",family_woman_woman_girl="👩‍👩‍👧",family_woman_woman_girl_boy="👩‍👩‍👧‍👦",family_woman_woman_boy_boy="👩‍👩‍👦‍👦",family_woman_woman_girl_girl="👩‍👩‍👧‍👧",family_man_boy="👨‍👦",family_man_boy_boy="👨‍👦‍👦",family_man_girl="👨‍👧",family_man_girl_boy="👨‍👧‍👦",family_man_girl_girl="👨‍👧‍👧",family_woman_boy="👩‍👦",family_woman_boy_boy="👩‍👦‍👦",family_woman_girl="👩‍👧",family_woman_girl_boy="👩‍👧‍👦",family_woman_girl_girl="👩‍👧‍👧",speaking_head="🗣️",bust_in_silhouette="👤",busts_in_silhouette="👥",people_hugging="🫂",footprints="👣",monkey_face="🐵",monkey="🐒",gorilla="🦍",orangutan="🦧",dog="🐶",dog2="🐕",guide_dog="🦮",service_dog="🐕‍🦺",poodle="🐩",wolf="🐺",fox_face="🦊",raccoon="🦝",cat="🐱",cat2="🐈",black_cat="🐈‍⬛",lion="🦁",tiger="🐯",tiger2="🐅",leopard="🐆",horse="🐴",racehorse="🐎",unicorn="🦄",zebra="🦓",deer="🦌",bison="🦬",cow="🐮",ox="🐂",water_buffalo="🐃",cow2="🐄",pig="🐷",pig2="🐖",boar="🐗",pig_nose="🐽",ram="🐏",sheep="🐑",goat="🐐",dromedary_camel="🐪",camel="🐫",llama="🦙",giraffe="🦒",elephant="🐘",mammoth="🦣",rhinoceros="🦏",hippopotamus="🦛",mouse="🐭",mouse2="🐁",rat="🐀",hamster="🐹",rabbit="🐰",rabbit2="🐇",chipmunk="🐿️",beaver="🦫",hedgehog="🦔",bat="🦇",bear="🐻",polar_bear="🐻‍❄️",koala="🐨",panda_face="🐼",sloth="🦥",otter="🦦",skunk="🦨",kangaroo="🦘",badger="🦡",feet="🐾",paw_prints="🐾",turkey="🦃",chicken="🐔",rooster="🐓",hatching_chick="🐣",baby_chick="🐤",hatched_chick="🐥",bird="🐦",penguin="🐧",dove="🕊️",eagle="🦅",duck="🦆",swan="🦢",owl="🦉",dodo="🦤",feather="🪶",flamingo="🦩",peacock="🦚",parrot="🦜",frog="🐸",crocodile="🐊",turtle="🐢",lizard="🦎",snake="🐍",dragon_face="🐲",dragon="🐉",sauropod="🦕",["t-rex"]="🦖",whale="🐳",whale2="🐋",dolphin="🐬",flipper="🐬",seal="🦭",fish="🐟",tropical_fish="🐠",blowfish="🐡",shark="🦈",octopus="🐙",shell="🐚",snail="🐌",butterfly="🦋",bug="🐛",ant="🐜",bee="🐝",honeybee="🐝",beetle="🪲",lady_beetle="🐞",cricket="🦗",cockroach="🪳",spider="🕷️",spider_web="🕸️",scorpion="🦂",mosquito="🦟",fly="🪰",worm="🪱",microbe="🦠",bouquet="💐",cherry_blossom="🌸",white_flower="💮",rosette="🏵️",rose="🌹",wilted_flower="🥀",hibiscus="🌺",sunflower="🌻",blossom="🌼",tulip="🌷",seedling="🌱",potted_plant="🪴",evergreen_tree="🌲",deciduous_tree="🌳",palm_tree="🌴",cactus="🌵",ear_of_rice="🌾",herb="🌿",shamrock="☘️",four_leaf_clover="🍀",maple_leaf="🍁",fallen_leaf="🍂",leaves="🍃",grapes="🍇",melon="🍈",watermelon="🍉",tangerine="🍊",orange="🍊",mandarin="🍊",lemon="🍋",banana="🍌",pineapple="🍍",mango="🥭",apple="🍎",green_apple="🍏",pear="🍐",peach="🍑",cherries="🍒",strawberry="🍓",blueberries="🫐",kiwi_fruit="🥝",tomato="🍅",olive="🫒",coconut="🥥",avocado="🥑",eggplant="🍆",potato="🥔",carrot="🥕",corn="🌽",hot_pepper="🌶️",bell_pepper="🫑",cucumber="🥒",leafy_green="🥬",broccoli="🥦",garlic="🧄",onion="🧅",mushroom="🍄",peanuts="🥜",chestnut="🌰",bread="🍞",croissant="🥐",baguette_bread="🥖",flatbread="🫓",pretzel="🥨",bagel="🥯",pancakes="🥞",waffle="🧇",cheese="🧀",meat_on_bone="🍖",poultry_leg="🍗",cut_of_meat="🥩",bacon="🥓",hamburger="🍔",fries="🍟",pizza="🍕",hotdog="🌭",sandwich="🥪",taco="🌮",burrito="🌯",tamale="🫔",stuffed_flatbread="🥙",falafel="🧆",egg="🥚",fried_egg="🍳",shallow_pan_of_food="🥘",stew="🍲",fondue="🫕",bowl_with_spoon="🥣",green_salad="🥗",popcorn="🍿",butter="🧈",salt="🧂",canned_food="🥫",bento="🍱",rice_cracker="🍘",rice_ball="🍙",rice="🍚",curry="🍛",ramen="🍜",spaghetti="🍝",sweet_potato="🍠",oden="🍢",sushi="🍣",fried_shrimp="🍤",fish_cake="🍥",moon_cake="🥮",dango="🍡",dumpling="🥟",fortune_cookie="🥠",takeout_box="🥡",crab="🦀",lobster="🦞",shrimp="🦐",squid="🦑",oyster="🦪",icecream="🍦",shaved_ice="🍧",ice_cream="🍨",doughnut="🍩",cookie="🍪",birthday="🎂",cake="🍰",cupcake="🧁",pie="🥧",chocolate_bar="🍫",candy="🍬",lollipop="🍭",custard="🍮",honey_pot="🍯",baby_bottle="🍼",milk_glass="🥛",coffee="☕",teapot="🫖",tea="🍵",sake="🍶",champagne="🍾",wine_glass="🍷",cocktail="🍸",tropical_drink="🍹",beer="🍺",beers="🍻",clinking_glasses="🥂",tumbler_glass="🥃",cup_with_straw="🥤",bubble_tea="🧋",beverage_box="🧃",mate="🧉",ice_cube="🧊",chopsticks="🥢",plate_with_cutlery="🍽️",fork_and_knife="🍴",spoon="🥄",hocho="🔪",knife="🔪",amphora="🏺",earth_africa="🌍",earth_americas="🌎",earth_asia="🌏",globe_with_meridians="🌐",world_map="🗺️",japan="🗾",compass="🧭",mountain_snow="🏔️",mountain="⛰️",volcano="🌋",mount_fuji="🗻",camping="🏕️",beach_umbrella="🏖️",desert="🏜️",desert_island="🏝️",national_park="🏞️",stadium="🏟️",classical_building="🏛️",building_construction="🏗️",bricks="🧱",rock="🪨",wood="🪵",hut="🛖",houses="🏘️",derelict_house="🏚️",house="🏠",house_with_garden="🏡",office="🏢",post_office="🏣",european_post_office="🏤",hospital="🏥",bank="🏦",hotel="🏨",love_hotel="🏩",convenience_store="🏪",school="🏫",department_store="🏬",factory="🏭",japanese_castle="🏯",european_castle="🏰",wedding="💒",tokyo_tower="🗼",statue_of_liberty="🗽",church="⛪",mosque="🕌",hindu_temple="🛕",synagogue="🕍",shinto_shrine="⛩️",kaaba="🕋",fountain="⛲",tent="⛺",foggy="🌁",night_with_stars="🌃",cityscape="🏙️",sunrise_over_mountains="🌄",sunrise="🌅",city_sunset="🌆",city_sunrise="🌇",bridge_at_night="🌉",hotsprings="♨️",carousel_horse="🎠",ferris_wheel="🎡",roller_coaster="🎢",barber="💈",circus_tent="🎪",steam_locomotive="🚂",railway_car="🚃",bullettrain_side="🚄",bullettrain_front="🚅",train2="🚆",metro="🚇",light_rail="🚈",station="🚉",tram="🚊",monorail="🚝",mountain_railway="🚞",train="🚋",bus="🚌",oncoming_bus="🚍",trolleybus="🚎",minibus="🚐",ambulance="🚑",fire_engine="🚒",police_car="🚓",oncoming_police_car="🚔",taxi="🚕",oncoming_taxi="🚖",car="🚗",red_car="🚗",oncoming_automobile="🚘",blue_car="🚙",pickup_truck="🛻",truck="🚚",articulated_lorry="🚛",tractor="🚜",racing_car="🏎️",motorcycle="🏍️",motor_scooter="🛵",manual_wheelchair="🦽",motorized_wheelchair="🦼",auto_rickshaw="🛺",bike="🚲",kick_scooter="🛴",skateboard="🛹",roller_skate="🛼",busstop="🚏",motorway="🛣️",railway_track="🛤️",oil_drum="🛢️",fuelpump="⛽",rotating_light="🚨",traffic_light="🚥",vertical_traffic_light="🚦",stop_sign="🛑",construction="🚧",anchor="⚓",boat="⛵",sailboat="⛵",canoe="🛶",speedboat="🚤",passenger_ship="🛳️",ferry="⛴️",motor_boat="🛥️",ship="🚢",airplane="✈️",small_airplane="🛩️",flight_departure="🛫",flight_arrival="🛬",parachute="🪂",seat="💺",helicopter="🚁",suspension_railway="🚟",mountain_cableway="🚠",aerial_tramway="🚡",artificial_satellite="🛰️",rocket="🚀",flying_saucer="🛸",bellhop_bell="🛎️",luggage="🧳",hourglass="⌛",hourglass_flowing_sand="⏳",watch="⌚",alarm_clock="⏰",stopwatch="⏱️",timer_clock="⏲️",mantelpiece_clock="🕰️",clock12="🕛",clock1230="🕧",clock1="🕐",clock130="🕜",clock2="🕑",clock230="🕝",clock3="🕒",clock330="🕞",clock4="🕓",clock430="🕟",clock5="🕔",clock530="🕠",clock6="🕕",clock630="🕡",clock7="🕖",clock730="🕢",clock8="🕗",clock830="🕣",clock9="🕘",clock930="🕤",clock10="🕙",clock1030="🕥",clock11="🕚",clock1130="🕦",new_moon="🌑",waxing_crescent_moon="🌒",first_quarter_moon="🌓",moon="🌔",waxing_gibbous_moon="🌔",full_moon="🌕",waning_gibbous_moon="🌖",last_quarter_moon="🌗",waning_crescent_moon="🌘",crescent_moon="🌙",new_moon_with_face="🌚",first_quarter_moon_with_face="🌛",last_quarter_moon_with_face="🌜",thermometer="🌡️",sunny="☀️",full_moon_with_face="🌝",sun_with_face="🌞",ringed_planet="🪐",star="⭐",star2="🌟",stars="🌠",milky_way="🌌",cloud="☁️",partly_sunny="⛅",cloud_with_lightning_and_rain="⛈️",sun_behind_small_cloud="🌤️",sun_behind_large_cloud="🌥️",sun_behind_rain_cloud="🌦️",cloud_with_rain="🌧️",cloud_with_snow="🌨️",cloud_with_lightning="🌩️",tornado="🌪️",fog="🌫️",wind_face="🌬️",cyclone="🌀",rainbow="🌈",closed_umbrella="🌂",open_umbrella="☂️",umbrella="☔",parasol_on_ground="⛱️",zap="⚡",snowflake="❄️",snowman_with_snow="☃️",snowman="⛄",comet="☄️",fire="🔥",droplet="💧",ocean="🌊",jack_o_lantern="🎃",christmas_tree="🎄",fireworks="🎆",sparkler="🎇",firecracker="🧨",sparkles="✨",balloon="🎈",tada="🎉",confetti_ball="🎊",tanabata_tree="🎋",bamboo="🎍",dolls="🎎",flags="🎏",wind_chime="🎐",rice_scene="🎑",red_envelope="🧧",ribbon="🎀",gift="🎁",reminder_ribbon="🎗️",tickets="🎟️",ticket="🎫",medal_military="🎖️",trophy="🏆",medal_sports="🏅",["1st_place_medal"]="🥇",["2nd_place_medal"]="🥈",["3rd_place_medal"]="🥉",soccer="⚽",baseball="⚾",softball="🥎",basketball="🏀",volleyball="🏐",football="🏈",rugby_football="🏉",tennis="🎾",flying_disc="🥏",bowling="🎳",cricket_game="🏏",field_hockey="🏑",ice_hockey="🏒",lacrosse="🥍",ping_pong="🏓",badminton="🏸",boxing_glove="🥊",martial_arts_uniform="🥋",goal_net="🥅",golf="⛳",ice_skate="⛸️",fishing_pole_and_fish="🎣",diving_mask="🤿",running_shirt_with_sash="🎽",ski="🎿",sled="🛷",curling_stone="🥌",dart="🎯",yo_yo="🪀",kite="🪁",["8ball"]="🎱",crystal_ball="🔮",magic_wand="🪄",nazar_amulet="🧿",video_game="🎮",joystick="🕹️",slot_machine="🎰",game_die="🎲",jigsaw="🧩",teddy_bear="🧸",pinata="🪅",nesting_dolls="🪆",spades="♠️",hearts="♥️",diamonds="♦️",clubs="♣️",chess_pawn="♟️",black_joker="🃏",mahjong="🀄",flower_playing_cards="🎴",performing_arts="🎭",framed_picture="🖼️",art="🎨",thread="🧵",sewing_needle="🪡",yarn="🧶",knot="🪢",eyeglasses="👓",dark_sunglasses="🕶️",goggles="🥽",lab_coat="🥼",safety_vest="🦺",necktie="👔",shirt="👕",tshirt="👕",jeans="👖",scarf="🧣",gloves="🧤",coat="🧥",socks="🧦",dress="👗",kimono="👘",sari="🥻",one_piece_swimsuit="🩱",swim_brief="🩲",shorts="🩳",bikini="👙",womans_clothes="👚",purse="👛",handbag="👜",pouch="👝",shopping="🛍️",school_satchel="🎒",thong_sandal="🩴",mans_shoe="👞",shoe="👞",athletic_shoe="👟",hiking_boot="🥾",flat_shoe="🥿",high_heel="👠",sandal="👡",ballet_shoes="🩰",boot="👢",crown="👑",womans_hat="👒",tophat="🎩",mortar_board="🎓",billed_cap="🧢",military_helmet="🪖",rescue_worker_helmet="⛑️",prayer_beads="📿",lipstick="💄",ring="💍",gem="💎",mute="🔇",speaker="🔈",sound="🔉",loud_sound="🔊",loudspeaker="📢",mega="📣",postal_horn="📯",bell="🔔",no_bell="🔕",musical_score="🎼",musical_note="🎵",notes="🎶",studio_microphone="🎙️",level_slider="🎚️",control_knobs="🎛️",microphone="🎤",headphones="🎧",radio="📻",saxophone="🎷",accordion="🪗",guitar="🎸",musical_keyboard="🎹",trumpet="🎺",violin="🎻",banjo="🪕",drum="🥁",long_drum="🪘",iphone="📱",calling="📲",phone="☎️",telephone="☎️",telephone_receiver="📞",pager="📟",fax="📠",battery="🔋",electric_plug="🔌",computer="💻",desktop_computer="🖥️",printer="🖨️",keyboard="⌨️",computer_mouse="🖱️",trackball="🖲️",minidisc="💽",floppy_disk="💾",cd="💿",dvd="📀",abacus="🧮",movie_camera="🎥",film_strip="🎞️",film_projector="📽️",clapper="🎬",tv="📺",camera="📷",camera_flash="📸",video_camera="📹",vhs="📼",mag="🔍",mag_right="🔎",candle="🕯️",bulb="💡",flashlight="🔦",izakaya_lantern="🏮",lantern="🏮",diya_lamp="🪔",notebook_with_decorative_cover="📔",closed_book="📕",book="📖",open_book="📖",green_book="📗",blue_book="📘",orange_book="📙",books="📚",notebook="📓",ledger="📒",page_with_curl="📃",scroll="📜",page_facing_up="📄",newspaper="📰",newspaper_roll="🗞️",bookmark_tabs="📑",bookmark="🔖",label="🏷️",moneybag="💰",coin="🪙",yen="💴",dollar="💵",euro="💶",pound="💷",money_with_wings="💸",credit_card="💳",receipt="🧾",chart="💹",envelope="✉️",email="📧",["e-mail"]="📧",incoming_envelope="📨",envelope_with_arrow="📩",outbox_tray="📤",inbox_tray="📥",package="📦",mailbox="📫",mailbox_closed="📪",mailbox_with_mail="📬",mailbox_with_no_mail="📭",postbox="📮",ballot_box="🗳️",pencil2="✏️",black_nib="✒️",fountain_pen="🖋️",pen="🖊️",paintbrush="🖌️",crayon="🖍️",memo="📝",pencil="📝",briefcase="💼",file_folder="📁",open_file_folder="📂",card_index_dividers="🗂️",date="📅",calendar="📆",spiral_notepad="🗒️",spiral_calendar="🗓️",card_index="📇",chart_with_upwards_trend="📈",chart_with_downwards_trend="📉",bar_chart="📊",clipboard="📋",pushpin="📌",round_pushpin="📍",paperclip="📎",paperclips="🖇️",straight_ruler="📏",triangular_ruler="📐",scissors="✂️",card_file_box="🗃️",file_cabinet="🗄️",wastebasket="🗑️",lock="🔒",unlock="🔓",lock_with_ink_pen="🔏",closed_lock_with_key="🔐",key="🔑",old_key="🗝️",hammer="🔨",axe="🪓",pick="⛏️",hammer_and_pick="⚒️",hammer_and_wrench="🛠️",dagger="🗡️",crossed_swords="⚔️",gun="🔫",boomerang="🪃",bow_and_arrow="🏹",shield="🛡️",carpentry_saw="🪚",wrench="🔧",screwdriver="🪛",nut_and_bolt="🔩",gear="⚙️",clamp="🗜️",balance_scale="⚖️",probing_cane="🦯",link="🔗",chains="⛓️",hook="🪝",toolbox="🧰",magnet="🧲",ladder="🪜",alembic="⚗️",test_tube="🧪",petri_dish="🧫",dna="🧬",microscope="🔬",telescope="🔭",satellite="📡",syringe="💉",drop_of_blood="🩸",pill="💊",adhesive_bandage="🩹",stethoscope="🩺",door="🚪",elevator="🛗",mirror="🪞",window="🪟",bed="🛏️",couch_and_lamp="🛋️",chair="🪑",toilet="🚽",plunger="🪠",shower="🚿",bathtub="🛁",mouse_trap="🪤",razor="🪒",lotion_bottle="🧴",safety_pin="🧷",broom="🧹",basket="🧺",roll_of_paper="🧻",bucket="🪣",soap="🧼",toothbrush="🪥",sponge="🧽",fire_extinguisher="🧯",shopping_cart="🛒",smoking="🚬",coffin="⚰️",headstone="🪦",funeral_urn="⚱️",moyai="🗿",placard="🪧",atm="🏧",put_litter_in_its_place="🚮",potable_water="🚰",wheelchair="♿",mens="🚹",womens="🚺",restroom="🚻",baby_symbol="🚼",wc="🚾",passport_control="🛂",customs="🛃",baggage_claim="🛄",left_luggage="🛅",warning="⚠️",children_crossing="🚸",no_entry="⛔",no_entry_sign="🚫",no_bicycles="🚳",no_smoking="🚭",do_not_litter="🚯",["non-potable_water"]="🚱",no_pedestrians="🚷",no_mobile_phones="📵",underage="🔞",radioactive="☢️",biohazard="☣️",arrow_up="⬆️",arrow_upper_right="↗️",arrow_right="➡️",arrow_lower_right="↘️",arrow_down="⬇️",arrow_lower_left="↙️",arrow_left="⬅️",arrow_upper_left="↖️",arrow_up_down="↕️",left_right_arrow="↔️",leftwards_arrow_with_hook="↩️",arrow_right_hook="↪️",arrow_heading_up="⤴️",arrow_heading_down="⤵️",arrows_clockwise="🔃",arrows_counterclockwise="🔄",back="🔙",["end"]="🔚",on="🔛",soon="🔜",top="🔝",place_of_worship="🛐",atom_symbol="⚛️",om="🕉️",star_of_david="✡️",wheel_of_dharma="☸️",yin_yang="☯️",latin_cross="✝️",orthodox_cross="☦️",star_and_crescent="☪️",peace_symbol="☮️",menorah="🕎",six_pointed_star="🔯",aries="♈",taurus="♉",gemini="♊",cancer="♋",leo="♌",virgo="♍",libra="♎",scorpius="♏",sagittarius="♐",capricorn="♑",aquarius="♒",pisces="♓",ophiuchus="⛎",twisted_rightwards_arrows="🔀",["repeat"]="🔁",repeat_one="🔂",arrow_forward="▶️",fast_forward="⏩",next_track_button="⏭️",play_or_pause_button="⏯️",arrow_backward="◀️",rewind="⏪",previous_track_button="⏮️",arrow_up_small="🔼",arrow_double_up="⏫",arrow_down_small="🔽",arrow_double_down="⏬",pause_button="⏸️",stop_button="⏹️",record_button="⏺️",eject_button="⏏️",cinema="🎦",low_brightness="🔅",high_brightness="🔆",signal_strength="📶",vibration_mode="📳",mobile_phone_off="📴",female_sign="♀️",male_sign="♂️",transgender_symbol="⚧️",heavy_multiplication_x="✖️",heavy_plus_sign="➕",heavy_minus_sign="➖",heavy_division_sign="➗",infinity="♾️",bangbang="‼️",interrobang="⁉️",question="❓",grey_question="❔",grey_exclamation="❕",exclamation="❗",heavy_exclamation_mark="❗",wavy_dash="〰️",currency_exchange="💱",heavy_dollar_sign="💲",medical_symbol="⚕️",recycle="♻️",fleur_de_lis="⚜️",trident="🔱",name_badge="📛",beginner="🔰",o="⭕",white_check_mark="✅",ballot_box_with_check="☑️",heavy_check_mark="✔️",x="❌",negative_squared_cross_mark="❎",curly_loop="➰",loop="➿",part_alternation_mark="〽️",eight_spoked_asterisk="✳️",eight_pointed_black_star="✴️",sparkle="❇️",copyright="©️",registered="®️",tm="™️",hash="#️⃣",asterisk="*️⃣",zero="0️⃣",one="1️⃣",two="2️⃣",three="3️⃣",four="4️⃣",five="5️⃣",six="6️⃣",seven="7️⃣",eight="8️⃣",nine="9️⃣",keycap_ten="🔟",capital_abcd="🔠",abcd="🔡",["1234"]="🔢",symbols="🔣",abc="🔤",a="🅰️",ab="🆎",b="🅱️",cl="🆑",cool="🆒",free="🆓",information_source="ℹ️",id="🆔",m="Ⓜ️",new="🆕",ng="🆖",o2="🅾️",ok="🆗",parking="🅿️",sos="🆘",up="🆙",vs="🆚",koko="🈁",sa="🈂️",u6708="🈷️",u6709="🈶",u6307="🈯",ideograph_advantage="🉐",u5272="🈹",u7121="🈚",u7981="🈲",accept="🉑",u7533="🈸",u5408="🈴",u7a7a="🈳",congratulations="㊗️",secret="㊙️",u55b6="🈺",u6e80="🈵",red_circle="🔴",orange_circle="🟠",yellow_circle="🟡",green_circle="🟢",large_blue_circle="🔵",purple_circle="🟣",brown_circle="🟤",black_circle="⚫",white_circle="⚪",red_square="🟥",orange_square="🟧",yellow_square="🟨",green_square="🟩",blue_square="🟦",purple_square="🟪",brown_square="🟫",black_large_square="⬛",white_large_square="⬜",black_medium_square="◼️",white_medium_square="◻️",black_medium_small_square="◾",white_medium_small_square="◽",black_small_square="▪️",white_small_square="▫️",large_orange_diamond="🔶",large_blue_diamond="🔷",small_orange_diamond="🔸",small_blue_diamond="🔹",small_red_triangle="🔺",small_red_triangle_down="🔻",diamond_shape_with_a_dot_inside="💠",radio_button="🔘",white_square_button="🔳",black_square_button="🔲",checkered_flag="🏁",triangular_flag_on_post="🚩",crossed_flags="🎌",black_flag="🏴",white_flag="🏳️",rainbow_flag="🏳️‍🌈",transgender_flag="🏳️‍⚧️",pirate_flag="🏴‍☠️",ascension_island="🇦🇨",andorra="🇦🇩",united_arab_emirates="🇦🇪",afghanistan="🇦🇫",antigua_barbuda="🇦🇬",anguilla="🇦🇮",albania="🇦🇱",armenia="🇦🇲",angola="🇦🇴",antarctica="🇦🇶",argentina="🇦🇷",american_samoa="🇦🇸",austria="🇦🇹",australia="🇦🇺",aruba="🇦🇼",aland_islands="🇦🇽",azerbaijan="🇦🇿",bosnia_herzegovina="🇧🇦",barbados="🇧🇧",bangladesh="🇧🇩",belgium="🇧🇪",burkina_faso="🇧🇫",bulgaria="🇧🇬",bahrain="🇧🇭",burundi="🇧🇮",benin="🇧🇯",st_barthelemy="🇧🇱",bermuda="🇧🇲",brunei="🇧🇳",bolivia="🇧🇴",caribbean_netherlands="🇧🇶",brazil="🇧🇷",bahamas="🇧🇸",bhutan="🇧🇹",bouvet_island="🇧🇻",botswana="🇧🇼",belarus="🇧🇾",belize="🇧🇿",canada="🇨🇦",cocos_islands="🇨🇨",congo_kinshasa="🇨🇩",central_african_republic="🇨🇫",congo_brazzaville="🇨🇬",switzerland="🇨🇭",cote_divoire="🇨🇮",cook_islands="🇨🇰",chile="🇨🇱",cameroon="🇨🇲",cn="🇨🇳",colombia="🇨🇴",clipperton_island="🇨🇵",costa_rica="🇨🇷",cuba="🇨🇺",cape_verde="🇨🇻",curacao="🇨🇼",christmas_island="🇨🇽",cyprus="🇨🇾",czech_republic="🇨🇿",de="🇩🇪",diego_garcia="🇩🇬",djibouti="🇩🇯",denmark="🇩🇰",dominica="🇩🇲",dominican_republic="🇩🇴",algeria="🇩🇿",ceuta_melilla="🇪🇦",ecuador="🇪🇨",estonia="🇪🇪",egypt="🇪🇬",western_sahara="🇪🇭",eritrea="🇪🇷",es="🇪🇸",ethiopia="🇪🇹",eu="🇪🇺",european_union="🇪🇺",finland="🇫🇮",fiji="🇫🇯",falkland_islands="🇫🇰",micronesia="🇫🇲",faroe_islands="🇫🇴",fr="🇫🇷",gabon="🇬🇦",gb="🇬🇧",uk="🇬🇧",grenada="🇬🇩",georgia="🇬🇪",french_guiana="🇬🇫",guernsey="🇬🇬",ghana="🇬🇭",gibraltar="🇬🇮",greenland="🇬🇱",gambia="🇬🇲",guinea="🇬🇳",guadeloupe="🇬🇵",equatorial_guinea="🇬🇶",greece="🇬🇷",south_georgia_south_sandwich_islands="🇬🇸",guatemala="🇬🇹",guam="🇬🇺",guinea_bissau="🇬🇼",guyana="🇬🇾",hong_kong="🇭🇰",heard_mcdonald_islands="🇭🇲",honduras="🇭🇳",croatia="🇭🇷",haiti="🇭🇹",hungary="🇭🇺",canary_islands="🇮🇨",indonesia="🇮🇩",ireland="🇮🇪",israel="🇮🇱",isle_of_man="🇮🇲",india="🇮🇳",british_indian_ocean_territory="🇮🇴",iraq="🇮🇶",iran="🇮🇷",iceland="🇮🇸",it="🇮🇹",jersey="🇯🇪",jamaica="🇯🇲",jordan="🇯🇴",jp="🇯🇵",kenya="🇰🇪",kyrgyzstan="🇰🇬",cambodia="🇰🇭",kiribati="🇰🇮",comoros="🇰🇲",st_kitts_nevis="🇰🇳",north_korea="🇰🇵",kr="🇰🇷",kuwait="🇰🇼",cayman_islands="🇰🇾",kazakhstan="🇰🇿",laos="🇱🇦",lebanon="🇱🇧",st_lucia="🇱🇨",liechtenstein="🇱🇮",sri_lanka="🇱🇰",liberia="🇱🇷",lesotho="🇱🇸",lithuania="🇱🇹",luxembourg="🇱🇺",latvia="🇱🇻",libya="🇱🇾",morocco="🇲🇦",monaco="🇲🇨",moldova="🇲🇩",montenegro="🇲🇪",st_martin="🇲🇫",madagascar="🇲🇬",marshall_islands="🇲🇭",macedonia="🇲🇰",mali="🇲🇱",myanmar="🇲🇲",mongolia="🇲🇳",macau="🇲🇴",northern_mariana_islands="🇲🇵",martinique="🇲🇶",mauritania="🇲🇷",montserrat="🇲🇸",malta="🇲🇹",mauritius="🇲🇺",maldives="🇲🇻",malawi="🇲🇼",mexico="🇲🇽",malaysia="🇲🇾",mozambique="🇲🇿",namibia="🇳🇦",new_caledonia="🇳🇨",niger="🇳🇪",norfolk_island="🇳🇫",nigeria="🇳🇬",nicaragua="🇳🇮",netherlands="🇳🇱",norway="🇳🇴",nepal="🇳🇵",nauru="🇳🇷",niue="🇳🇺",new_zealand="🇳🇿",oman="🇴🇲",panama="🇵🇦",peru="🇵🇪",french_polynesia="🇵🇫",papua_new_guinea="🇵🇬",philippines="🇵🇭",pakistan="🇵🇰",poland="🇵🇱",st_pierre_miquelon="🇵🇲",pitcairn_islands="🇵🇳",puerto_rico="🇵🇷",palestinian_territories="🇵🇸",portugal="🇵🇹",palau="🇵🇼",paraguay="🇵🇾",qatar="🇶🇦",reunion="🇷🇪",romania="🇷🇴",serbia="🇷🇸",ru="🇷🇺",rwanda="🇷🇼",saudi_arabia="🇸🇦",solomon_islands="🇸🇧",seychelles="🇸🇨",sudan="🇸🇩",sweden="🇸🇪",singapore="🇸🇬",st_helena="🇸🇭",slovenia="🇸🇮",svalbard_jan_mayen="🇸🇯",slovakia="🇸🇰",sierra_leone="🇸🇱",san_marino="🇸🇲",senegal="🇸🇳",somalia="🇸🇴",suriname="🇸🇷",south_sudan="🇸🇸",sao_tome_principe="🇸🇹",el_salvador="🇸🇻",sint_maarten="🇸🇽",syria="🇸🇾",swaziland="🇸🇿",tristan_da_cunha="🇹🇦",turks_caicos_islands="🇹🇨",chad="🇹🇩",french_southern_territories="🇹🇫",togo="🇹🇬",thailand="🇹🇭",tajikistan="🇹🇯",tokelau="🇹🇰",timor_leste="🇹🇱",turkmenistan="🇹🇲",tunisia="🇹🇳",tonga="🇹🇴",tr="🇹🇷",trinidad_tobago="🇹🇹",tuvalu="🇹🇻",taiwan="🇹🇼",tanzania="🇹🇿",ukraine="🇺🇦",uganda="🇺🇬",us_outlying_islands="🇺🇲",united_nations="🇺🇳",us="🇺🇸",uruguay="🇺🇾",uzbekistan="🇺🇿",vatican_city="🇻🇦",st_vincent_grenadines="🇻🇨",venezuela="🇻🇪",british_virgin_islands="🇻🇬",us_virgin_islands="🇻🇮",vietnam="🇻🇳",vanuatu="🇻🇺",wallis_futuna="🇼🇫",samoa="🇼🇸",kosovo="🇽🇰",yemen="🇾🇪",mayotte="🇾🇹",south_africa="🇿🇦",zambia="🇿🇲",zimbabwe="🇿🇼",england="🏴󠁧󠁢󠁥󠁮󠁧󠁿",scotland="🏴󠁧󠁢󠁳󠁣󠁴󠁿",wales="🏴󠁧󠁢󠁷󠁬󠁳󠁿"};end;package.preload["djot.html"]=function()local e=require("djot.ast");local t=e.new_node;local a=e.new_attributes;local o=e.add_child;local i=unpack or table.unpack;local n,s=e.insert_attribute,e.copy_attributes;local h=string.format;local r,d=string.find,string.gsub;local l;local function c(e)local t={};if e then for e,a in pairs(e)do local o=a;if type(a)=="table"then o=c(a);end t[e]=o;end end return t;end local function u(e)local t={};if e.t=="str"then t[#t+1]=e.s;elseif e.t=="nbsp"then t[#t+1]="\160";elseif e.t=="softbreak"then t[#t+1]=" ";elseif e.c and(#e.c>0)then for a=1,#e.c do t[#t+1]=u(e.c[a]);end end return table.concat(t);end local m={};function m.new(e)local t={out=function(e)io.stdout:write(e);end,tight=false,footnote_index={},next_footnote_index=1,references=nil,footnotes=nil};setmetatable(t,e);e.__index=e;return t;end m.html_escapes={["<"]="&lt;",[">"]="&gt;",["&"]="&amp;",['"']="&quot;"};function m.escape_html(e,t)if r(t,"[<>&]")then return(d(t,"[<>&]",e.html_escapes));else return t;end end function m.escape_html_attribute(e,t)if r(t,'[<>&"]')then return(d(t,'[<>&"]',e.html_escapes));else return t;end end function m.render(e,t,a)e.references=t.references;e.footnotes=t.footnotes;if a then function e.out(e)a:write(e);end end e[t.t](e,t);end function m.render_children(e,t)local t,a=pcall(function()if t.c and(#t.c>0)then local a;if t.tight~=nil then a=e.tight;e.tight=t.tight;end for a=1,#t.c do e[t.c[a].t](e,t.c[a]);end if t.tight~=nil then e.tight=a;end end end);if not t and a:find("stack overflow")then e.out("(((DEEPLY NESTED CONTENT OMITTED)))\n");end end function m.render_attrs(e,t)if t.attr then for t,a in pairs(t.attr)do e.out(" "..t.."="..'"'..e:escape_html_attribute(a)..'"');end end if t.pos then local t,a=i(t.pos);e.out(' data-startpos="'..tostring(t)..'" data-endpos="'..tostring(a)..'"');end end function m.render_tag(e,t,a)e.out("<"..t);e:render_attrs(a);e.out(">");end function m.add_backlink(a,a,i)local n=t("link");n.destination="#fnref"..tostring(i);n.attr=e.new_attributes({role="doc-backlink"});local e=t("str");e.s="↩︎︎";o(n,e);if a.c[#a.c].t=="para"then o(a.c[#a.c],n);else local e=t("para");o(e,n);o(a,e);end end function m.doc(e,t)e:render_children(t);if e.next_footnote_index>1 then local t={};for a,o in pairs(e.footnotes)do if e.footnote_index[a]then t[e.footnote_index[a]]=o;end end e.out('<section role="doc-endnotes">\n<hr>\n<ol>\n');for a=1,#t do local t=t[a];if t then e.out(h('<li id="fn%d">\n',a));e:add_backlink(t,a);e:render_children(t);e.out("</li>\n");end end e.out("</ol>\n</section>\n");end end function m.raw_block(e,t)if t.format=="html"then e.out(t.s);end end function m.para(e,t)if not e.tight then e:render_tag("p",t);end e:render_children(t);if not e.tight then e.out("</p>");end e.out("\n");end function m.blockquote(e,t)e:render_tag("blockquote",t);e.out("\n");e:render_children(t);e.out("</blockquote>\n");end function m.div(e,t)e:render_tag("div",t);e.out("\n");e:render_children(t);e.out("</div>\n");end function m.section(e,t)e:render_tag("section",t);e.out("\n");e:render_children(t);e.out("</section>\n");end function m.heading(e,t)e:render_tag("h"..t.level,t);e:render_children(t);e.out("</h"..t.level..">\n");end function m.thematic_break(e,t)e:render_tag("hr",t);e.out("\n");end function m.code_block(e,t)e:render_tag("pre",t);e.out("<code");if t.lang and(#t.lang>0)then e.out(' class="language-'..t.lang..'"');end e.out(">");e.out(e:escape_html(t.s));e.out("</code></pre>\n");end function m.table(e,t)e:render_tag("table",t);e.out("\n");e:render_children(t);e.out("</table>\n");end function m.row(e,t)e:render_tag("tr",t);e.out("\n");e:render_children(t);e.out("</tr>\n");end function m.cell(e,t)local a;if t.head then a="th";else a="td";end local o=c(t.attr);if t.align then n(o,"style","text-align: "..t.align..";");end e:render_tag(a,{attr=o});e:render_children(t);e.out("</"..a..">\n");end function m.caption(e,t)e:render_tag("caption",t);e:render_children(t);e.out("</caption>\n");end function m.list(e,t)local a=t.list_style;if(a=="*")or(a=="+")or(a=="-")then e:render_tag("ul",t);e.out("\n");e:render_children(t);e.out("</ul>\n");elseif a=="X"then local a=c(t.attr);if a.class then a.class="task-list "..a.class;else n(a,"class","task-list");end e:render_tag("ul",{attr=a});e.out("\n");e:render_children(t);e.out("</ul>\n");elseif a==":"then e:render_tag("dl",t);e.out("\n");e:render_children(t);e.out("</dl>\n");else e.out("<ol");if t.start and(t.start>1)then e.out(' start="'..t.start..'"');end local a=d(t.list_style,"%p","");if a~="1"then e.out(' type="'..a..'"');end e:render_attrs(t);e.out(">\n");e:render_children(t);e.out("</ol>\n");end end function m.list_item(e,t)if t.checkbox then if t.checkbox=="checked"then e.out('<li class="checked">');elseif t.checkbox=="unchecked"then e.out('<li class="unchecked">');end else e:render_tag("li",t);end e.out("\n");e:render_children(t);e.out("</li>\n");end function m.term(e,t)e:render_tag("dt",t);e:render_children(t);e.out("</dt>\n");end function m.definition(e,t)e:render_tag("dd",t);e.out("\n");e:render_children(t);e.out("</dd>\n");end function m.definition_list_item(e,t)e:render_children(t);end function m.reference_definition(e)end function m.footnote_reference(e,t)local t=t.s;local a=e.footnote_index[t];if not a then a=e.next_footnote_index;e.footnote_index[t]=a;e.next_footnote_index=e.next_footnote_index+1;end e.out(h('<a id="fnref%d" href="#fn%d" role="doc-noteref"><sup>%d</sup></a>',a,a,a));end function m.raw_inline(e,t)if t.format=="html"then e.out(t.s);end end function m.str(e,t)if t.attr then e:render_tag("span",t);e.out(e:escape_html(t.s));e.out("</span>");else e.out(e:escape_html(t.s));end end function m.softbreak(e)e.out("\n");end function m.hardbreak(e)e.out("<br>\n");end function m.nbsp(e)e.out("&nbsp;");end function m.verbatim(e,t)e:render_tag("code",t);e.out(e:escape_html(t.s));e.out("</code>");end function m.link(e,t)local a=a({});if t.reference then local e=e.references[t.reference];if e then if e.attr then s(a,e.attr);end n(a,"href",e.destination);end elseif t.destination then n(a,"href",t.destination);end s(a,t.attr);e:render_tag("a",{attr=a});e:render_children(t);e.out("</a>");end m.url=m.link;m.email=m.link;function m.image(e,t)local a=a({});local o=u(t);if#o>0 then n(a,"alt",u(t));end if t.reference then local e=e.references[t.reference];if e then if e.attr then s(a,e.attr);end n(a,"src",e.destination);end elseif t.destination then n(a,"src",t.destination);end s(a,t.attr);e:render_tag("img",{attr=a});end function m.span(e,t)e:render_tag("span",t);e:render_children(t);e.out("</span>");end function m.mark(e,t)e:render_tag("mark",t);e:render_children(t);e.out("</mark>");end function m.insert(e,t)e:render_tag("ins",t);e:render_children(t);e.out("</ins>");end function m.delete(e,t)e:render_tag("del",t);e:render_children(t);e.out("</del>");end function m.subscript(e,t)e:render_tag("sub",t);e:render_children(t);e.out("</sub>");end function m.superscript(e,t)e:render_tag("sup",t);e:render_children(t);e.out("</sup>");end function m.emph(e,t)e:render_tag("em",t);e:render_children(t);e.out("</em>");end function m.strong(e,t)e:render_tag("strong",t);e:render_children(t);e.out("</strong>");end function m.double_quoted(e,t)e.out("&ldquo;");e:render_children(t);e.out("&rdquo;");end function m.single_quoted(e,t)e.out("&lsquo;");e:render_children(t);e.out("&rsquo;");end function m.left_double_quote(e)e.out("&ldquo;");end function m.right_double_quote(e)e.out("&rdquo;");end function m.left_single_quote(e)e.out("&lsquo;");end function m.right_single_quote(e)e.out("&rsquo;");end function m.ellipses(e)e.out("&hellip;");end function m.em_dash(e)e.out("&mdash;");end function m.en_dash(e)e.out("&ndash;");end function m.emoji(e,t)if not l then l=require("djot.emoji");end local a=l[t.alias];e.out(a or(":"..t.alias..":"));end function m.math(e,t)local a="inline";if r(t.attr.class,"display")then a="display";end e:render_tag("span",t);if a=="inline"then e.out("\\(");else e.out("\\[");end e:render_children(t);if a=="inline"then e.out("\\)");else e.out("\\]");end e.out("</span>");end return{Renderer=m};end;package.preload["djot.filter"]=function()local function e(t,a)local o=a[t.t];local i,n;if type(o)=="table"then i=o.enter;n=o.exit;elseif type(o)=="function"then n=o;end if i then local e=i(t);if e then return;end end if t.c then for t,t in ipairs(t.c)do e(t,a);end end if t.footnotes then for t,t in pairs(t.footnotes)do e(t,a);end end if n then n(t);end end local function t(t,a)e(t,a);return t;end local function e(e,a)for a,a in ipairs(a)do t(e,a);end end local function t(e)local t=package.path;local e,t=pcall(function()package.path="./?.lua;"..package.path;local e=require(e:gsub("%.lua$",""));package.path=t;return e;end);if not e then return nil,t;elseif type(t)~="table"then return nil,"filter must be a table";end if#t==0 then return{t};else return t;end end local function a(e)local t,a;if _VERSION:match("5.1")then t,a=loadstring(e);else t,a=load(e);end if t then local e=t();if type(e)~="table"then return nil,"filter must be a table";end if#e==0 then return{e};else return e;end else return nil,a;end end return{apply_filter=e,require_filter=t,load_filter=a};end;package.preload["djot.json"]=function()local e={_version="0.1.2"};local t;local a={["\\"]="\\",['"']='"',["\b"]="b",["\f"]="f",["\n"]="n",["\r"]="r",["\t"]="t"};local o={["/"]="/"};for e,t in pairs(a)do o[t]=e;end local function o(e)return"\\"..(a[e]or string.format("u%04x",e:byte()));end local function a(e)return"null";end local function i(e,a)local o={};a=a or{};if a[e]then error("circular reference");end a[e]=true;if(rawget(e,1)~=nil)or(next(e)==nil)then local i=0;for e in pairs(e)do if type(e)~="number"then error("invalid table: mixed or invalid key types");end i=i+1;end if i~=#e then error("invalid table: sparse array");end for e,e in ipairs(e)do table.insert(o,t(e,a));end a[e]=nil;return"["..table.concat(o,",").."]";else for e,i in pairs(e)do if type(e)~="string"then error("invalid table: mixed or invalid key types");end table.insert(o,t(e,a)..":"..t(i,a));end a[e]=nil;return"{"..table.concat(o,",").."}";end end local function n(e)return'"'..e:gsub('[%z\1-\31\\"]',o)..'"';end local function o(e)if(e~=e)or(e<=-math.huge)or(e>=math.huge)then error("unexpected number value '"..tostring(e).."'");end return string.format("%.14g",e);end local a={["nil"]=a,table=i,string=n,number=o,boolean=tostring};function t(e,t)local o=type(e);local a=a[o];if a then return a(e,t);end error("unexpected type '"..o.."'");end function e.encode(e)return(t(e));end return e;end;function package.preload.djot()local e=unpack or table.unpack;local e=require("djot.block").Parser;local t=require("djot.ast");local a=require("djot.html");local o=require("djot.json");local i=require("djot.filter");local i={};function i.new(e)local e={};setmetatable(e,i);i.__index=i;return e;end function i.write(e,t)e[#e+1]=t;end function i.flush(e)return table.concat(e);end local function n(a,o,i)local e=e:new(a,i);return t.to_ast(e,o);end local function s(t,a)return e:new(t):events();end local function e(e)local a=i:new();t.render(e,a);return a:flush();end local function t(e)return o.encode(e).."\n";end local function o(e)local t=i:new();local a=a.Renderer:new();a:render(e,t);return t:flush();end local function a(e,t,a)return string.format("[%q,%d,%d]",a,e,t);end local function h(e,t)local o=i:new();local i=0;for e,t,n in s(e,t)do i=i+1;if i==1 then o:write("[");else o:write(",");end o:write(a(e,t,n).."\n");end o:write("]\n");return o:flush();end local i="0.2.0";local e={parse=n,parse_events=s,parse_and_render_events=h,render_html=o,render_ast_pretty=e,render_ast_json=t,render_event=a,version=i};setmetatable(e,{__index=function(e,t)local a=require("djot."..t);rawset(e,t,a);return e[t];end});return e;end local e=require("djot");return e;